% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summariseClinicalRecords.R
\name{summariseClinicalRecords}
\alias{summariseClinicalRecords}
\title{Summarise an omop table from a cdm object. You will obtain
information related to the number of records, number of subjects, whether the
records are in observation, number of present domains and number of present
concepts.}
\usage{
summariseClinicalRecords(
  omopTable,
  recordsPerPerson = c("mean", "sd", "median", "q25", "q75", "min", "max"),
  inObservation = TRUE,
  standardConcept = TRUE,
  sourceVocabulary = FALSE,
  domainId = TRUE,
  typeConcept = TRUE,
  sex = FALSE
)
}
\arguments{
\item{omopTable}{An omop_table object derived from a cdm object.}

\item{recordsPerPerson}{Generates summary statistics for the number of records per person. Set to NULL if no summary statistics are required.}

\item{inObservation}{Boolean variable. Whether to include the percentage of records in
observation.}

\item{standardConcept}{Boolean variable. Whether to summarise standard concept information.}

\item{sourceVocabulary}{Boolean variable.  Whether to summarise source vocabulary information.}

\item{domainId}{Boolean variable. Whether to summarise domain id of standard concept id information.}

\item{typeConcept}{Boolean variable. Whether to summarise type concept id field information.}

\item{sex}{Boolean variable. Whether to stratify by sex (TRUE) or not (FALSE)}
}
\value{
A summarised_result object.
}
\description{
Summarise an omop table from a cdm object. You will obtain
information related to the number of records, number of subjects, whether the
records are in observation, number of present domains and number of present
concepts.
}
\examples{
\donttest{
library(dplyr)
library(CDMConnector)
library(DBI)
library(duckdb)
library(OmopSketch)

# Connect to Eunomia database
if (Sys.getenv("EUNOMIA_DATA_FOLDER") == "") Sys.setenv("EUNOMIA_DATA_FOLDER" = tempdir())
if (!dir.exists(Sys.getenv("EUNOMIA_DATA_FOLDER"))) dir.create(Sys.getenv("EUNOMIA_DATA_FOLDER"))
if (!eunomia_is_available()) downloadEunomiaData()
con <- DBI::dbConnect(duckdb::duckdb(), CDMConnector::eunomia_dir())
cdm <- CDMConnector::cdmFromCon(
con = con, cdmSchema = "main", writeSchema = "main"
)

# Run summarise clinical tables
summarisedResult <- summariseClinicalRecords(omopTable = cdm$condition_occurrence,
                                            recordsPerPerson = c("mean", "sd"),
                                            inObservation = TRUE,
                                            standardConcept = TRUE,
                                            sourceVocabulary = TRUE,
                                            domainId = TRUE,
                                            typeConcept = TRUE)
summarisedResult |> print()
PatientProfiles::mockDisconnect(cdm = cdm)
}
}
