[{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://OHDSI.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Summarise clinical tables records","text":"vignette, explore OmopSketch functions designed provide overview clinical tables within CDM object (observation_period, visit_occurrence, condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, measurement, observation, death). Specifically, four key functions facilitate : summariseClinicalRecords() tableClinicalRecords(): Use create summary statistics key basic information clinical table (e.g., number records, number concepts mapped, etc.) summariseRecordCount() plotRecordCount(): Use summarise number records within specific time interval.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"create-a-mock-cdm","dir":"Articles","previous_headings":"Introduction","what":"Create a mock cdm","title":"Summarise clinical tables records","text":"Let’s see example functionalities. start , load essential packages create mock cdm using mockOmopSketch() database.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(OmopSketch)  # Connect to mock database cdm <- mockOmopSketch() #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid"},{"path":"https://OHDSI.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"summarise-clinical-tables","dir":"Articles","previous_headings":"","what":"Summarise clinical tables","title":"Summarise clinical tables records","text":"Let’s now use summariseClinicalTables()OmopSketch package help us overview one clinical tables cdm (.e., condition_occurrence). Notice output summarised result format. can use arguments specify statistics want perform. example, use argument recordsPerPerson indicate estimates interested regarding number records per person. can specify want include number records observation (inObservation = TRUE), number concepts mapped (standardConcept = TRUE), types source vocabulary table contain (sourceVocabulary = TRUE), types domain vocabulary (domainId = TRUE) concept’s type (typeConcept = TRUE). Additionally, can also stratify previous results sex age groups: Notice , default, “overall” group also included, well crossed strata (means, sex == “Female” ageGroup == “>35”). Also, see analysis can conducted multiple OMOP tables time:","code":"summarisedResult <- summariseClinicalRecords(cdm, \"condition_occurrence\") #> ℹ Adding variables of interest to condition_occurrence. #> ℹ Summarising records per person in condition_occurrence. #> ℹ Summarising condition_occurrence: `in_observation`, `standard_concept`, #>   `source_vocabulary`, `domain_id`, and `type_concept`.  summarisedResult |> print() #> # A tibble: 20 × 13 #>    result_id cdm_name       group_name group_level      strata_name strata_level #>        <int> <chr>          <chr>      <chr>            <chr>       <chr>        #>  1         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  2         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  3         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  4         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  5         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  6         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  7         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  8         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  9         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 10         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 11         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 12         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 13         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 14         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 15         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 16         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 17         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 18         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 19         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 20         1 mockOmopSketch omop_table condition_occur… overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr> summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\")) #> ℹ Adding variables of interest to condition_occurrence. #> ℹ Summarising records per person in condition_occurrence. #> ℹ Summarising condition_occurrence: `in_observation`, `standard_concept`, #>   `source_vocabulary`, `domain_id`, and `type_concept`.  summarisedResult |>      filter(variable_name == \"records_per_person\") |>     select(variable_name, estimate_name, estimate_value) #> # A tibble: 4 × 3 #>   variable_name      estimate_name estimate_value #>   <chr>              <chr>         <chr>          #> 1 records_per_person mean          19             #> 2 records_per_person q05           13             #> 3 records_per_person q95           26             #> 4 records_per_person sd            4.5438 summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\"),                                              inObservation = TRUE,                                              standardConcept = TRUE,                                              sourceVocabulary = TRUE,                                              domainId = TRUE,                                              typeConcept = TRUE) #> ℹ Adding variables of interest to condition_occurrence. #> ℹ Summarising records per person in condition_occurrence. #> ℹ Summarising condition_occurrence: `in_observation`, `standard_concept`, #>   `source_vocabulary`, `domain_id`, and `type_concept`.  summarisedResult |>    select(variable_name, estimate_name, estimate_value) |>    glimpse() #> Rows: 17 #> Columns: 3 #> $ variable_name  <chr> \"Number subjects\", \"Number subjects\", \"Number records\",… #> $ estimate_name  <chr> \"count\", \"percentage\", \"count\", \"mean\", \"q05\", \"q95\", \"… #> $ estimate_value <chr> \"100\", \"100\", \"1900\", \"19\", \"13\", \"26\", \"4.5438\", \"1900… summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\"),                                              inObservation = TRUE,                                              standardConcept = TRUE,                                              sourceVocabulary = TRUE,                                              domainId = TRUE,                                              typeConcept = TRUE,                                              sex = TRUE,                                              ageGroup = list(\"<35\" = c(0, 34), \">=35\" = c(35, Inf))) #> ℹ Adding variables of interest to condition_occurrence. #> ℹ Summarising records per person in condition_occurrence. #> ℹ Summarising condition_occurrence: `in_observation`, `standard_concept`, #>   `source_vocabulary`, `domain_id`, and `type_concept`.  summarisedResult |>    select(variable_name, strata_level, estimate_name, estimate_value) |>    glimpse() #> Rows: 153 #> Columns: 4 #> $ variable_name  <chr> \"Number subjects\", \"Number subjects\", \"Number records\",… #> $ strata_level   <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\", … #> $ estimate_name  <chr> \"count\", \"percentage\", \"count\", \"mean\", \"q05\", \"q95\", \"… #> $ estimate_value <chr> \"100\", \"100\", \"1900\", \"19\", \"12.9500\", \"26.0500\", \"4.54… summarisedResult <- summariseClinicalRecords(cdm,                                               c(\"observation_period\",\"drug_exposure\"),                                              recordsPerPerson =  c(\"mean\",\"sd\"),                                              inObservation = FALSE,                                              standardConcept = FALSE,                                              sourceVocabulary = FALSE,                                              domainId = FALSE,                                              typeConcept = FALSE) #> ℹ Adding variables of interest to observation_period. #> ℹ Summarising records per person in observation_period. #> ℹ Adding variables of interest to drug_exposure. #> ℹ Summarising records per person in drug_exposure.  summarisedResult |>    select(group_level, variable_name, estimate_name, estimate_value) |>    glimpse() #> Rows: 10 #> Columns: 4 #> $ group_level    <chr> \"observation_period\", \"observation_period\", \"observatio… #> $ variable_name  <chr> \"Number subjects\", \"Number subjects\", \"Number records\",… #> $ estimate_name  <chr> \"count\", \"percentage\", \"count\", \"mean\", \"sd\", \"count\", … #> $ estimate_value <chr> \"100\", \"100\", \"100\", \"1\", \"0\", \"100\", \"100\", \"5600\", \"5…"},{"path":"https://OHDSI.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"tidy-the-summarised-object","dir":"Articles","previous_headings":"Summarise clinical tables","what":"Tidy the summarised object","title":"Summarise clinical tables records","text":"tableClinicalRecords() help tidy previous results create gt table.","code":"summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\"),                                              inObservation = TRUE,                                              standardConcept = TRUE,                                              sourceVocabulary = TRUE,                                              domainId = TRUE,                                              typeConcept = TRUE,                                               sex = TRUE) #> ℹ Adding variables of interest to condition_occurrence. #> ℹ Summarising records per person in condition_occurrence. #> ℹ Summarising condition_occurrence: `in_observation`, `standard_concept`, #>   `source_vocabulary`, `domain_id`, and `type_concept`.  summarisedResult |>    tableClinicalRecords()"},{"path":"https://OHDSI.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"summarise-record-counts","dir":"Articles","previous_headings":"","what":"Summarise record counts","title":"Summarise clinical tables records","text":"OmopSketch can also help summarise trend records OMOP table. See example , use summariseRecordCount() count number records within year, , use plotRecordCount() create ggplot trend.  Note can adjust time interval period using interval argument, can set either “years” “months”. See example , shows number records every 18 months:  can stratify counts sex (setting argument sex = TRUE) age (providing age group). Notice cases, function automatically create group called overall sex groups age groups.  default, plotRecordCount() apply faceting colour variables. can result confusing stratifying different variables, seen previous picture. can use VisOmopResults package help us know columns can colour face : , can simply specify using facet colour arguments plotRecordCount()  Finally, disconnect cdm","code":"summarisedResult <- summariseRecordCount(cdm, \"drug_exposure\", interval = \"years\")  summarisedResult |> print() #> # A tibble: 67 × 13 #>    result_id cdm_name       group_name group_level   strata_name strata_level #>        <int> <chr>          <chr>      <chr>         <chr>       <chr>        #>  1         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  2         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  3         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  4         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  5         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  6         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  7         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  8         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  9         1 mockOmopSketch omop_table drug_exposure overall     overall      #> 10         1 mockOmopSketch omop_table drug_exposure overall     overall      #> # ℹ 57 more rows #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>  summarisedResult |> plotRecordCount() summariseRecordCount(cdm, \"drug_exposure\", interval = \"months\") |>    plotRecordCount() summariseRecordCount(cdm, \"drug_exposure\",                       interval = \"months\",                       sex = TRUE,                        ageGroup = list(\"<30\" = c(0,29),                                      \">=30\" = c(30,Inf))) |>    plotRecordCount() summariseRecordCount(cdm, \"drug_exposure\",                      interval = \"months\",                       sex = TRUE,                      ageGroup = list(\"0-29\" = c(0,29),                                      \"30-Inf\" = c(30,Inf)))  |>   visOmopResults::tidyColumns() #> [1] \"cdm_name\"       \"omop_table\"     \"age_group\"      \"sex\"            #> [5] \"variable_name\"  \"variable_level\" \"count\"          \"time_interval\"  #> [9] \"interval\" summariseRecordCount(cdm, \"drug_exposure\",                      interval = \"months\",                      sex = TRUE,                      ageGroup = list(\"0-29\" = c(0,29),                                      \"30-Inf\" = c(30,Inf))) |>     plotRecordCount(facet = omop_table ~ age_group, colour = \"sex\") PatientProfiles::mockDisconnect(cdm = cdm)"},{"path":"https://OHDSI.github.io/OmopSketch/articles/B-summarise_concept_set_counts.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Summarise concept counts","text":"vignette, explore OmopSketch functions designed provide information number counts specific concepts. Specifically, two key functions facilitate , summariseConceptSetCounts() plotConceptCounts(). former one creates summary statistics results number counts per concept, latter one creates histogram plot.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/articles/B-summarise_concept_set_counts.html","id":"create-a-mock-cdm","dir":"Articles","previous_headings":"Introduction","what":"Create a mock cdm","title":"Summarise concept counts","text":"Let’s see example previous functions. start , load essential packages create mock cdm using Eunomia database.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(CDMConnector) library(DBI) library(duckdb) library(OmopSketch) library(CodelistGenerator)  # Connect to Eunomia database con <- DBI::dbConnect(duckdb::duckdb(), CDMConnector::eunomia_dir()) cdm <- CDMConnector::cdmFromCon(   con = con, cdmSchema = \"main\", writeSchema = \"main\" ) #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid #> ! cdm name not specified and could not be inferred from the cdm source table  cdm  #>  #> ── # OMOP CDM reference (duckdb) of An OMOP CDM database ─────────────────────── #> • omop tables: person, observation_period, visit_occurrence, visit_detail, #> condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, #> measurement, observation, death, note, note_nlp, specimen, fact_relationship, #> location, care_site, provider, payer_plan_period, cost, drug_era, dose_era, #> condition_era, metadata, cdm_source, concept, vocabulary, domain, #> concept_class, concept_relationship, relationship, concept_synonym, #> concept_ancestor, source_to_concept_map, drug_strength #> • cohort tables: - #> • achilles tables: - #> • other tables: -"},{"path":"https://OHDSI.github.io/OmopSketch/articles/B-summarise_concept_set_counts.html","id":"summarise-concept-counts","dir":"Articles","previous_headings":"","what":"Summarise concept counts","title":"Summarise concept counts","text":"First, let’s generate list codes concept dementia using CodelistGenerator package. Now want explore occurrence concepts within database. , can use summariseConceptSetCounts() OmopSketch: default, function provide information either number records (estimate_name == \"record_count\") concept_id number people (estimate_name == \"person_count\"): However, can specify one interest using countBy argument: One can stratify year, sex age group using year, sex, ageGroup arguments.","code":"acetaminophen <- getCandidateCodes(   cdm = cdm,   keywords = \"acetaminophen\",   domains = \"Drug\",   includeDescendants = TRUE ) |>   dplyr::pull(\"concept_id\") #> Limiting to domains of interest #> Getting concepts to include #> Adding descendants #> Search completed. Finishing up. #> ✔ 7 candidate concepts identified #>  #> Time taken: 0 minutes and 0 seconds  sinusitis <- getCandidateCodes(   cdm = cdm,   keywords = \"sinusitis\",   domains = \"Condition\",   includeDescendants = TRUE ) |>   dplyr::pull(\"concept_id\") #> Limiting to domains of interest #> Getting concepts to include #> Adding descendants #> Search completed. Finishing up. #> ✔ 4 candidate concepts identified #>  #> Time taken: 0 minutes and 0 seconds summariseConceptSetCounts(cdm,                        conceptSet = list(\"acetaminophen\" = acetaminophen,                                                                   \"sinusitis\" = sinusitis)) |>      select(group_level, variable_name, variable_level, estimate_name, estimate_value) |>      glimpse()  #> ℹ Searching concepts from domain drug in drug_exposure. #> ℹ Searching concepts from domain condition in condition_occurrence. #> ℹ Counting concepts #> Rows: 24 #> Columns: 5 #> $ group_level    <chr> \"acetaminophen\", \"acetaminophen\", \"sinusitis\", \"sinusit… #> $ variable_name  <chr> \"Number records\", \"Number subjects\", \"Number records\", … #> $ variable_level <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ estimate_name  <chr> \"count\", \"count\", \"count\", \"count\", \"count\", \"count\", \"… #> $ estimate_value <chr> \"14205\", \"2679\", \"20033\", \"2689\", \"312\", \"312\", \"71\", \"… summariseConceptSetCounts(cdm,                         conceptSet = list(\"acetaminophen\" = acetaminophen,                                          \"sinusitis\" = sinusitis),                         countBy = c(\"record\",\"person\")) |>   select(group_level, variable_name, estimate_name) |>   distinct() |>   arrange(group_level, variable_name) #> ℹ Searching concepts from domain drug in drug_exposure. #> ℹ Searching concepts from domain condition in condition_occurrence. #> ℹ Counting concepts #> # A tibble: 4 × 3 #>   group_level   variable_name   estimate_name #>   <chr>         <chr>           <chr>         #> 1 acetaminophen Number records  count         #> 2 acetaminophen Number subjects count         #> 3 sinusitis     Number records  count         #> 4 sinusitis     Number subjects count summariseConceptSetCounts(cdm,                         conceptSet = list(\"acetaminophen\" = acetaminophen,                                         \"sinusitis\" = sinusitis),                        countBy = \"record\") |>   select(group_level, variable_name, estimate_name) |>   distinct() |>   arrange(group_level, variable_name)  #> ℹ Searching concepts from domain drug in drug_exposure. #> ℹ Searching concepts from domain condition in condition_occurrence. #> ℹ Counting concepts #> # A tibble: 2 × 3 #>   group_level   variable_name  estimate_name #>   <chr>         <chr>          <chr>         #> 1 acetaminophen Number records count         #> 2 sinusitis     Number records count summariseConceptSetCounts(cdm,                        conceptSet = list(\"acetaminophen\" = acetaminophen,                                         \"sinusitis\" = sinusitis),                        countBy = \"person\",                        interval = \"years\",                        sex  = TRUE,                          ageGroup = list(\"<=50\" = c(0,50), \">50\" = c(51,Inf))) |>      select(group_level, strata_level, variable_name, estimate_name) |>   glimpse()  #> ℹ Searching concepts from domain drug in drug_exposure. #> ℹ Searching concepts from domain condition in condition_occurrence. #> ℹ Counting concepts #> Rows: 7,545 #> Columns: 4 #> $ group_level   <chr> \"sinusitis\", \"acetaminophen\", \"acetaminophen\", \"sinusiti… #> $ strata_level  <chr> \"overall\", \"overall\", \"<=50\", \"<=50\", \">50\", \">50\", \"Fem… #> $ variable_name <chr> \"Number subjects\", \"Number subjects\", \"Number subjects\",… #> $ estimate_name <chr> \"count\", \"count\", \"count\", \"count\", \"count\", \"count\", \"c…"},{"path":"https://OHDSI.github.io/OmopSketch/articles/B-summarise_concept_set_counts.html","id":"visualise-the-results","dir":"Articles","previous_headings":"Summarise concept counts","what":"Visualise the results","title":"Summarise concept counts","text":"Finally, can visualise concept counts using plotRecordCounts(). Notice either person counts record counts can plotted. included summarised result, filter include one variable time:  Additionally, results stratified year, sex age group, can use facet colour arguments highlight different results plot. help us identify variables can colour facet , can use visOmopResult package.","code":"summariseConceptSetCounts(cdm,                         conceptSet = list(\"sinusitis\" = sinusitis),                         countBy = \"person\") |>    plotConceptSetCounts() #> ℹ Searching concepts from domain condition in condition_occurrence. #> ℹ Counting concepts summariseConceptSetCounts(cdm,                         conceptSet = list(\"sinusitis\" = sinusitis),                        countBy = c(\"person\",\"record\")) |>   filter(variable_name == \"Number subjects\") |>   plotConceptSetCounts() #> ℹ Searching concepts from domain condition in condition_occurrence. #> ℹ Counting concepts summariseConceptSetCounts(cdm,                         conceptSet = list(\"sinusitis\" = sinusitis),                        countBy = c(\"person\"),                        sex = TRUE,                         ageGroup = list(\"<=50\" = c(0,50), \">50\" = c(51, Inf))) |>   visOmopResults::tidyColumns() #> ℹ Searching concepts from domain condition in condition_occurrence. #> ℹ Counting concepts #>  [1] \"cdm_name\"              \"codelist_name\"         \"age_group\"             #>  [4] \"sex\"                   \"variable_name\"         \"variable_level\"        #>  [7] \"count\"                 \"standard_concept_name\" \"standard_concept_id\"   #> [10] \"source_concept_name\"   \"source_concept_id\"     \"domain_id\"  summariseConceptSetCounts(cdm,                         conceptSet = list(\"sinusitis\" = sinusitis),                        countBy = c(\"person\"),                        sex = TRUE,                         ageGroup = list(\"<=50\" = c(0,50), \">50\" = c(51, Inf))) |>   plotConceptSetCounts(facet = \"sex\", colour = \"age_group\") #> ℹ Searching concepts from domain condition in condition_occurrence. #> ℹ Counting concepts"},{"path":"https://OHDSI.github.io/OmopSketch/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marta Alcalde-Herraiz. Author. Kim Lopez-Guell. Author. Elin Rowlands. Author. Cecilia Campanile. Author, maintainer. Edward Burn. Author. Martí Català. Author.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alcalde-Herraiz M, Lopez-Guell K, Rowlands E, Campanile C, Burn E, Català M (2025). OmopSketch: Characterise Tables OMOP Common Data Model Instance. R package version 0.2.0, https://OHDSI.github.io/OmopSketch/.","code":"@Manual{,   title = {OmopSketch: Characterise Tables of an OMOP Common Data Model Instance},   author = {Marta Alcalde-Herraiz and Kim Lopez-Guell and Elin Rowlands and Cecilia Campanile and Edward Burn and Martí Català},   year = {2025},   note = {R package version 0.2.0},   url = {https://OHDSI.github.io/OmopSketch/}, }"},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"omopsketch-","dir":"","previous_headings":"","what":"Characterise Tables of an OMOP Common Data Model Instance","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"goal OmopSketch characterise visualise OMOP CDM instance asses meets necessary criteria answer specific clinical question conduct certain study.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"can install development version OmopSketch GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"OHDSI/OmopSketch\")"},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"Let’s start creating cdm object using Eunomia mock dataset:","code":"library(duckdb) #> Loading required package: DBI library(CDMConnector) library(dplyr, warn.conflicts = FALSE) library(OmopSketch) con <- dbConnect(duckdb(), eunomia_dir()) cdm <- cdmFromCon(con = con, cdmSchema = \"main\", writeSchema = \"main\") #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid cdm #>  #> ── # OMOP CDM reference (duckdb) of Synthea synthetic health database ────────── #> • omop tables: person, observation_period, visit_occurrence, visit_detail, #> condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, #> measurement, observation, death, note, note_nlp, specimen, fact_relationship, #> location, care_site, provider, payer_plan_period, cost, drug_era, dose_era, #> condition_era, metadata, cdm_source, concept, vocabulary, domain, #> concept_class, concept_relationship, relationship, concept_synonym, #> concept_ancestor, source_to_concept_map, drug_strength #> • cohort tables: - #> • achilles tables: - #> • other tables: -"},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"snapshot","dir":"","previous_headings":"Example","what":"Snapshot","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"first create snapshot database. allow us track analysis conducted capture details CDM version data release.","code":"summariseOmopSnapshot(cdm) |>   tableOmopSnapshot(type = \"flextable\")"},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"characterise-the-clinical-tables","dir":"","previous_headings":"Example","what":"Characterise the clinical tables","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"collected snapshot information, can start characterising clinical tables CDM. using summariseClinicalRecords() tableClinicalRecords(), can easily visualise main characteristics specific clinical tables.  can also explore trends clinical table records time.","code":"summariseClinicalRecords(cdm, c(\"condition_occurrence\", \"drug_exposure\")) |>   tableClinicalRecords(type = \"flextable\") #> ℹ Adding variables of interest to condition_occurrence. #> ℹ Summarising records per person in condition_occurrence. #> ℹ Summarising condition_occurrence: `in_observation`, `standard_concept`, #>   `source_vocabulary`, `domain_id`, and `type_concept`. #> ℹ Adding variables of interest to drug_exposure. #> ℹ Summarising records per person in drug_exposure. #> ℹ Summarising drug_exposure: `in_observation`, `standard_concept`, #>   `source_vocabulary`, `domain_id`, and `type_concept`. summariseRecordCount(cdm, c(\"condition_occurrence\", \"drug_exposure\"), interval = \"years\") |>   plotRecordCount(facet = \"omop_table\", colour = \"cdm_name\")"},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"characterise-the-observation-period","dir":"","previous_headings":"Example","what":"Characterise the observation period","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"visualising main characteristics clinical tables, can explore observation period details. OmopSketch provides several functions overview dataset study period. Using summariseInObservation() plotInObservation(), can gather information number records per year.  can also visualise explore characteristics observation period per individual database using summariseObservationPeriod().  visualisation preferred, can easily build histogram explore many participants one observation period.","code":"summariseInObservation(cdm$observation_period, output = \"records\", interval = \"years\") |>   plotInObservation(colour = \"cdm_name\") #> `result_id` is not present in result. #> `result_id` is not present in result. summariseObservationPeriod(cdm$observation_period) |>   tableObservationPeriod(type = \"flextable\") summariseObservationPeriod(cdm$observation_period) |>   plotObservationPeriod(colour = \"observation_period_ordinal\")"},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"characterise-the-concepts","dir":"","previous_headings":"Example","what":"Characterise the concepts","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"OmopSketch also provides functions explore () concepts dataset.  seen, OmopSketch offers multiple functionalities provide general overview database. Additionally, includes tools arguments allow deeper exploration, helping assess database’s suitability specific research studies. information, please refer vignettes.","code":"acetaminophen <- c(1125315,  1127433, 1127078)  summariseConceptSetCounts(cdm, conceptSet = list(\"acetaminophen\" = acetaminophen)) |>   filter(variable_name == \"Number records\") |>    plotConceptSetCounts(colour = \"codelist_name\") #> Warning: ! `codelist` contains numeric values, they are casted to integers. #> ℹ Searching concepts from domain drug in drug_exposure. #> ℹ Counting concepts"},{"path":"https://OHDSI.github.io/OmopSketch/reference/OmopSketch-package.html","id":null,"dir":"Reference","previous_headings":"","what":"OmopSketch: Characterise Tables of an OMOP Common Data Model Instance — OmopSketch-package","title":"OmopSketch: Characterise Tables of an OMOP Common Data Model Instance — OmopSketch-package","text":"Summarises key information data mapped Observational Medical Outcomes Partnership (OMOP) common data model. Assess suitability perform specific epidemiological studies explore different domains obtain feasibility counts trends.","code":""},{"path":[]},{"path":"https://OHDSI.github.io/OmopSketch/reference/OmopSketch-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OmopSketch: Characterise Tables of an OMOP Common Data Model Instance — OmopSketch-package","text":"Maintainer: Cecilia Campanile cecilia.campanile@ndorms.ox.ac.uk (ORCID) Authors: Marta Alcalde-Herraiz marta.alcaldeherraiz@ndorms.ox.ac.uk (ORCID) Kim Lopez-Guell kim.lopez@spc.ox.ac.uk (ORCID) Elin Rowlands elin.rowlands@ndorms.ox.ac.uk (ORCID) Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) Martí Català marti.catalasabate@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/mockOmopSketch.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a mock database to test OmopSketch package. — mockOmopSketch","title":"Creates a mock database to test OmopSketch package. — mockOmopSketch","text":"Creates mock database test OmopSketch package.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/mockOmopSketch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a mock database to test OmopSketch package. — mockOmopSketch","text":"","code":"mockOmopSketch(   con = NULL,   writeSchema = NULL,   numberIndividuals = 100,   seed = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/mockOmopSketch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a mock database to test OmopSketch package. — mockOmopSketch","text":"con DBI connection create cdm mock object. default, connection 'duckdb' one. writeSchema Name schema DBI connection writing permissions. numberIndividuals Number individuals create cdm reference object. seed optional integer used set seed random number generation, ensuring reproducibility generated data. provided, seed allows function produce consistent results time run inputs. 'NULL', seed set, can lead different outputs run.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/mockOmopSketch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a mock database to test OmopSketch package. — mockOmopSketch","text":"mock cdm_reference object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/mockOmopSketch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a mock database to test OmopSketch package. — mockOmopSketch","text":"","code":"mockOmopSketch(numberIndividuals = 100) #> Note: method with signature ‘DBIConnection#Id’ chosen for function ‘dbExistsTable’, #>  target signature ‘duckdb_connection#Id’. #>  \"duckdb_connection#ANY\" would also be valid #>  #> ── # OMOP CDM reference (duckdb) of mockOmopSketch ───────────────────────────── #> • omop tables: person, observation_period, cdm_source, concept, vocabulary, #> concept_relationship, concept_synonym, concept_ancestor, drug_strength, #> condition_occurrence, death, drug_exposure, measurement, observation, #> procedure_occurrence, visit_occurrence, device_exposure #> • cohort tables: - #> • achilles tables: - #> • other tables: -"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotConceptSetCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the concept counts of a summariseConceptSetCounts output. — plotConceptSetCounts","title":"Plot the concept counts of a summariseConceptSetCounts output. — plotConceptSetCounts","text":"Plot concept counts summariseConceptSetCounts output.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotConceptSetCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the concept counts of a summariseConceptSetCounts output. — plotConceptSetCounts","text":"","code":"plotConceptSetCounts(result, facet = NULL, colour = NULL)"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotConceptSetCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the concept counts of a summariseConceptSetCounts output. — plotConceptSetCounts","text":"result summarised_result object (output summariseConceptSetCounts). facet Columns face . Formula format can provided. See possible columns face : visOmopResults::tidyColumns(). colour Columns colour . See possible columns colour : visOmopResults::tidyColumns().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotConceptSetCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the concept counts of a summariseConceptSetCounts output. — plotConceptSetCounts","text":"ggplot2 object showing concept counts.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotConceptSetCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the concept counts of a summariseConceptSetCounts output. — plotConceptSetCounts","text":"","code":"# \\donttest{ library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  cdm <- mockOmopSketch()  result <- cdm |>   summariseConceptSetCounts(     conceptSet= list(       \"Renal agenesis\" = 194152,       \"Manic mood\" = c(4226696, 4304866, 37110496, 40371897)     )   ) #> Warning: ! `codelist` contains numeric values, they are casted to integers. #> ℹ Searching concepts from domain condition in condition_occurrence. #> ℹ Counting concepts  result |>   filter(variable_name == \"Number subjects\") |>   plotConceptSetCounts(facet = \"codelist_name\", colour = \"standard_concept_name\")   PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotInObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","title":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","text":"Create ggplot2 plot output summariseInObservation().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotInObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","text":"","code":"plotInObservation(result, facet = NULL, colour = NULL)"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotInObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","text":"result summarised_result object (output summariseInObservation). facet Columns face . Formula format can provided. See possible columns face : visOmopResults::tidyColumns(). colour Columns colour . See possible columns colour : visOmopResults::tidyColumns().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotInObservation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","text":"ggplot showing table counts","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotInObservation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","text":"","code":"# \\donttest{ library(dplyr)  cdm <- mockOmopSketch()  result <- summariseInObservation(   cdm$observation_period,   output = c(\"person-days\",\"records\"),   ageGroup = list(\"<=40\" = c(0, 40), \">40\" = c(41, Inf)),   sex = TRUE )  result |>   filter(variable_name == \"Number person-days\") |>   plotInObservation(facet = \"sex\", colour = \"age_group\") #> `result_id` is not present in result. #> `result_id` is not present in result.   PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotObservationPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"Create plot output summariseObservationPeriod().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"","code":"plotObservationPeriod(   result,   variableName = \"Number subjects\",   plotType = \"barplot\",   facet = NULL,   colour = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"result summarised_result object. variableName variable plot can : \"number subjects\", \"records per person\", \"duration\" \"days next observation period\". plotType plot type, can : \"barplot\", \"boxplot\" \"densityplot\". facet Columns colour . See possible columns colour : visOmopResults::tidyColumns(). colour Columns colour . See possible columns colour : visOmopResults::tidyColumns().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"ggplot2 object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"","code":"# \\donttest{ cdm <- mockOmopSketch(numberIndividuals = 100)  result <- summariseObservationPeriod(cdm$observation_period)  result |>   plotObservationPeriod(     variableName = \"Duration in days\",     plotType = \"boxplot\"   )   PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotRecordCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot of the records' count trend. — plotRecordCount","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"Create ggplot records' count trend.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotRecordCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"","code":"plotRecordCount(result, facet = NULL, colour = NULL)"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotRecordCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"result Output summariseRecordCount(). facet Columns face . Formula format can provided. See possible columns face : visOmopResults::tidyColumns(). colour Columns colour . See possible columns colour : visOmopResults::tidyColumns().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotRecordCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"ggplot showing table counts","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotRecordCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"","code":"# \\donttest{ cdm <- mockOmopSketch()  summarisedResult <- summariseRecordCount(   cdm = cdm,   omopTableName = \"condition_occurrence\",   ageGroup = list(\"<=20\" = c(0,20), \">20\" = c(21, Inf)),   sex = TRUE )  plotRecordCount(summarisedResult, colour = \"age_group\", facet = sex ~ .)   PatientProfiles::mockDisconnect(cdm = cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. omopgenerics bind, exportSummarisedResult, importSummarisedResult, settings, suppress","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"Summarise omop table cdm object. obtain information related number records, number subjects, whether records observation, number present domains number present concepts.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"","code":"summariseClinicalRecords(   cdm,   omopTableName,   recordsPerPerson = c(\"mean\", \"sd\", \"median\", \"q25\", \"q75\", \"min\", \"max\"),   inObservation = TRUE,   standardConcept = TRUE,   sourceVocabulary = TRUE,   domainId = TRUE,   typeConcept = TRUE,   sex = FALSE,   ageGroup = NULL,   sample = NULL,   dateRange = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"cdm cdm_reference object. omopTableName character vector names tables summarise cdm object. recordsPerPerson Generates summary statistics number records per person. Set NULL summary statistics required. inObservation Boolean variable. Whether include percentage records observation. standardConcept Boolean variable. Whether summarise standard concept information. sourceVocabulary Boolean variable.  Whether summarise source vocabulary information. domainId Boolean variable. Whether summarise domain id standard concept id information. typeConcept Boolean variable. Whether summarise type concept id field information. sex Boolean variable. Whether stratify sex (TRUE) (FALSE). ageGroup list age groups stratify results . sample integer sample tables number records. NULL sample done. dateRange list containing minimum maximum dates defining time range within analysis performed.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"","code":"# \\donttest{ cdm <- mockOmopSketch()  summarisedResult <- summariseClinicalRecords(   cdm = cdm,   omopTableName = \"condition_occurrence\",   recordsPerPerson = c(\"mean\", \"sd\"),   inObservation = TRUE,   standardConcept = TRUE,   sourceVocabulary = TRUE,   domainId = TRUE,   typeConcept = TRUE ) #> ℹ Adding variables of interest to condition_occurrence. #> ℹ Summarising records per person in condition_occurrence. #> ℹ Summarising condition_occurrence: `in_observation`, `standard_concept`, #>   `source_vocabulary`, `domain_id`, and `type_concept`.  summarisedResult #> # A tibble: 15 × 13 #>    result_id cdm_name       group_name group_level      strata_name strata_level #>        <int> <chr>          <chr>      <chr>            <chr>       <chr>        #>  1         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  2         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  3         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  4         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  5         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  6         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  7         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  8         1 mockOmopSketch omop_table condition_occur… overall     overall      #>  9         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 10         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 11         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 12         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 13         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 14         1 mockOmopSketch omop_table condition_occur… overall     overall      #> 15         1 mockOmopSketch omop_table condition_occur… overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>  PatientProfiles::mockDisconnect(cdm = cdm) # }"},{"path":[]},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise concept counts in patient-level data. Only concepts recorded during observation period are counted. — summariseConceptCounts","text":"","code":"summariseConceptCounts(   cdm,   conceptId,   countBy = c(\"record\", \"person\"),   concept = TRUE,   interval = \"overall\",   sex = FALSE,   ageGroup = NULL,   dateRange = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise concept counts in patient-level data. Only concepts recorded during observation period are counted. — summariseConceptCounts","text":"cdm cdm object conceptId List concept IDs summarise. countBy Either \"record\" record-level counts \"person\" person-level counts concept TRUE FALSE. TRUE code use summarised concept. interval Time interval stratify . can either \"years\", \"quarters\", \"months\" \"overall\". sex TRUE FALSE. TRUE code use summarised sex. ageGroup list ageGroup vectors length two. Code use thus summarised age groups. dateRange list containing minimum maximum dates defining time range within analysis performed.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise concept counts in patient-level data. Only concepts recorded during observation period are counted. — summariseConceptCounts","text":"summarised_result object results overall , specified, strata.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptIdCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise concept use in patient-level data — summariseConceptIdCounts","title":"Summarise concept use in patient-level data — summariseConceptIdCounts","text":"Summarise concept use patient-level data","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptIdCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise concept use in patient-level data — summariseConceptIdCounts","text":"","code":"summariseConceptIdCounts(   cdm,   omopTableName,   countBy = \"record\",   year = FALSE,   sex = FALSE,   ageGroup = NULL,   sample = NULL,   dateRange = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptIdCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise concept use in patient-level data — summariseConceptIdCounts","text":"cdm cdm object omopTableName character vector names tables summarise cdm object. countBy Either \"record\" record-level counts \"person\" person-level counts year TRUE FALSE. TRUE code use summarised year. sex TRUE FALSE. TRUE code use summarised sex. ageGroup list ageGroup vectors length two. Code use thus summarised age groups. sample integer sample tables number records. NULL sample done. dateRange list containing minimum maximum dates defining time range within analysis performed.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptIdCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise concept use in patient-level data — summariseConceptIdCounts","text":"summarised_result object results overall , specified, strata.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptIdCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise concept use in patient-level data — summariseConceptIdCounts","text":"","code":"# \\donttest{ library(OmopSketch) library(CDMConnector) library(duckdb) #> Loading required package: DBI  requireEunomia() #> ℹ `EUNOMIA_DATA_FOLDER` set to: /tmp/RtmpM3CYcd. #>  #> Download completed! con <- dbConnect(duckdb(), eunomiaDir()) #> Creating CDM database /tmp/RtmpM3CYcd/GiBleed_5.3.zip cdm <- cdmFromCon(con = con, cdmSchema = \"main\", writeSchema = \"main\") #> ! cdm name not specified and could not be inferred from the cdm source table  summariseConceptIdCounts(cdm, \"condition_occurrence\") #> # A tibble: 80 × 13 #>    result_id cdm_name            group_name group_level strata_name strata_level #>        <int> <chr>               <chr>      <chr>       <chr>       <chr>        #>  1         1 An OMOP CDM databa… omop_table condition_… overall     overall      #>  2         1 An OMOP CDM databa… omop_table condition_… overall     overall      #>  3         1 An OMOP CDM databa… omop_table condition_… overall     overall      #>  4         1 An OMOP CDM databa… omop_table condition_… overall     overall      #>  5         1 An OMOP CDM databa… omop_table condition_… overall     overall      #>  6         1 An OMOP CDM databa… omop_table condition_… overall     overall      #>  7         1 An OMOP CDM databa… omop_table condition_… overall     overall      #>  8         1 An OMOP CDM databa… omop_table condition_… overall     overall      #>  9         1 An OMOP CDM databa… omop_table condition_… overall     overall      #> 10         1 An OMOP CDM databa… omop_table condition_… overall     overall      #> # ℹ 70 more rows #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr> # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptSetCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise concept counts in patient-level data. Only concepts recorded during observation period are counted. — summariseConceptSetCounts","title":"Summarise concept counts in patient-level data. Only concepts recorded during observation period are counted. — summariseConceptSetCounts","text":"Summarise concept counts patient-level data. concepts recorded observation period counted.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptSetCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise concept counts in patient-level data. Only concepts recorded during observation period are counted. — summariseConceptSetCounts","text":"","code":"summariseConceptSetCounts(   cdm,   conceptSet,   countBy = c(\"record\", \"person\"),   concept = TRUE,   interval = \"overall\",   sex = FALSE,   ageGroup = NULL,   sample = NULL,   dateRange = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptSetCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise concept counts in patient-level data. Only concepts recorded during observation period are counted. — summariseConceptSetCounts","text":"cdm cdm object conceptSet List concept IDs summarise. countBy Either \"record\" record-level counts \"person\" person-level counts concept TRUE FALSE. TRUE code use summarised concept. interval Time interval stratify . can either \"years\", \"quarters\", \"months\" \"overall\". sex TRUE FALSE. TRUE code use summarised sex. ageGroup list ageGroup vectors length two. Code use thus summarised age groups. sample integer sample tables cdm object number records. NULL sample done. dateRange list containing minimum maximum dates defining time range within analysis performed.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptSetCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise concept counts in patient-level data. Only concepts recorded during observation period are counted. — summariseConceptSetCounts","text":"summarised_result object results overall , specified, strata.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptSetCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise concept counts in patient-level data. Only concepts recorded during observation period are counted. — summariseConceptSetCounts","text":"","code":"# \\donttest{ library(OmopSketch)  cdm <- mockOmopSketch()  cs <- list(sumatriptan = c(35604883, 35604879, 35604880, 35604884))  results <- summariseConceptSetCounts(cdm, conceptSet = cs) #> Warning: ! `codelist` contains numeric values, they are casted to integers. #> ℹ Searching concepts from domain drug in drug_exposure. #> ℹ Counting concepts  results #> # A tibble: 10 × 13 #>    result_id cdm_name       group_name    group_level strata_name strata_level #>        <int> <chr>          <chr>         <chr>       <chr>       <chr>        #>  1         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  2         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  3         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  4         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  5         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  6         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  7         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  8         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  9         1 mockOmopSketch codelist_name sumatriptan overall     overall      #> 10         1 mockOmopSketch codelist_name sumatriptan overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>  PatientProfiles::mockDisconnect(cdm)  # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseInObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","title":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","text":"Summarise number people observation specific interval time.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseInObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","text":"","code":"summariseInObservation(   observationPeriod,   interval = \"overall\",   output = \"records\",   ageGroup = NULL,   sex = FALSE,   dateRange = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseInObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","text":"observationPeriod observation_period omop table. must part cdm_reference object. interval Time interval stratify . can either \"years\", \"quarters\", \"months\" \"overall\". output Output format. can either number records (\"records\") observation specific interval time, number person-days (\"person-days\"), c(\"records\",\"person-days\"). ageGroup list age groups stratify results . sex Boolean variable. Whether stratify sex (TRUE) (FALSE). dateRange list containing minimum maximum dates defining time range within analysis performed.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseInObservation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","text":"summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseInObservation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","text":"","code":"# \\donttest{ library(dplyr, warn.conflicts = FALSE)  cdm <- mockOmopSketch()  result <- summariseInObservation(   cdm$observation_period,   interval = \"months\",   output = c(\"person-days\",\"records\"),   ageGroup = list(\"<=60\" = c(0,60), \">60\" = c(61, Inf)),   sex = TRUE )  result |>   glimpse() #> Rows: 18,976 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"mockOmopSketch\", \"mockOmopSketch\", \"mockOmopSketch\",… #> $ group_name       <chr> \"omop_table\", \"omop_table\", \"omop_table\", \"omop_table… #> $ group_level      <chr> \"observation_period\", \"observation_period\", \"observat… #> $ strata_name      <chr> \"sex &&& age_group\", \"sex\", \"sex &&& age_group\", \"sex… #> $ strata_level     <chr> \"Female &&& <=60\", \"Female\", \"Female &&& <=60\", \"Fema… #> $ variable_name    <chr> \"Number person-days\", \"Number person-days\", \"Number r… #> $ variable_level   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ estimate_name    <chr> \"count\", \"count\", \"count\", \"count\", \"count\", \"count\",… #> $ estimate_type    <chr> \"integer\", \"integer\", \"integer\", \"integer\", \"integer\"… #> $ estimate_value   <chr> \"15\", \"15\", \"1\", \"1\", \"30\", \"30\", \"1\", \"1\", \"31\", \"31… #> $ additional_name  <chr> \"time_interval\", \"time_interval\", \"time_interval\", \"t… #> $ additional_level <chr> \"1954-05-01 to 1954-05-31\", \"1954-05-01 to 1954-05-31…  PatientProfiles::mockDisconnect(cdm)  # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseMissingData.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise missing data in omop tables — summariseMissingData","title":"Summarise missing data in omop tables — summariseMissingData","text":"Summarise missing data omop tables","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseMissingData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise missing data in omop tables — summariseMissingData","text":"","code":"summariseMissingData(   cdm,   omopTableName,   col = NULL,   sex = FALSE,   year = FALSE,   ageGroup = NULL,   sample = 1e+06,   dateRange = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseMissingData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise missing data in omop tables — summariseMissingData","text":"cdm cdm object omopTableName character vector names tables summarise cdm object. col character vector column names check missing values. NULL, columns specified tables checked. Default NULL. sex TRUE FALSE. TRUE code use summarised sex. year TRUE FALSE. TRUE code use summarised year. ageGroup list ageGroup vectors length two. Code use thus summarised age groups. sample integer sample table number records. NULL sample done. dateRange list containing minimum maximum dates defining time range within analysis performed.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseMissingData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise missing data in omop tables — summariseMissingData","text":"summarised_result object results overall , specified, strata.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"Summarise observation period table getting overall statistics summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"","code":"summariseObservationPeriod(   observationPeriod,   estimates = c(\"mean\", \"sd\", \"min\", \"q05\", \"q25\", \"median\", \"q75\", \"q95\", \"max\",     \"density\"),   ageGroup = NULL,   sex = FALSE,   dateRange = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"observationPeriod observation_period omop table. estimates Estimates summarise variables interest ( records per person, duration days days next observation period). ageGroup list age groups stratify results . sex Boolean variable. Whether stratify sex (TRUE) (FALSE). dateRange list containing minimum maximum dates defining time range within analysis performed.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"summarised_result object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"","code":"# \\donttest{ library(dplyr, warn.conflicts = FALSE)  cdm <- mockOmopSketch(numberIndividuals = 100)  result <- summariseObservationPeriod(cdm$observation_period)  result |>   glimpse() #> Rows: 3,102 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"mockOmopSketch\", \"mockOmopSketch\", \"mockOmopSketch\",… #> $ group_name       <chr> \"observation_period_ordinal\", \"observation_period_ord… #> $ group_level      <chr> \"all\", \"all\", \"all\", \"all\", \"all\", \"all\", \"all\", \"all… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"Number records\", \"Number subjects\", \"Records per per… #> $ variable_level   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ estimate_name    <chr> \"count\", \"count\", \"mean\", \"sd\", \"min\", \"q05\", \"q25\", … #> $ estimate_type    <chr> \"integer\", \"integer\", \"numeric\", \"numeric\", \"integer\"… #> $ estimate_value   <chr> \"100\", \"100\", \"1\", \"0\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",… #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"…  PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","title":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","text":"Summarise cdm_reference object creating snapshot metadata cdm_reference object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","text":"","code":"summariseOmopSnapshot(cdm)"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","text":"cdm cdm_reference object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","text":"summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","text":"","code":"cdm <- mockOmopSketch(numberIndividuals = 10)  summariseOmopSnapshot(cdm) #> # A tibble: 13 × 13 #>    result_id cdm_name       group_name group_level strata_name strata_level #>        <int> <chr>          <chr>      <chr>       <chr>       <chr>        #>  1         1 mockOmopSketch overall    overall     overall     overall      #>  2         1 mockOmopSketch overall    overall     overall     overall      #>  3         1 mockOmopSketch overall    overall     overall     overall      #>  4         1 mockOmopSketch overall    overall     overall     overall      #>  5         1 mockOmopSketch overall    overall     overall     overall      #>  6         1 mockOmopSketch overall    overall     overall     overall      #>  7         1 mockOmopSketch overall    overall     overall     overall      #>  8         1 mockOmopSketch overall    overall     overall     overall      #>  9         1 mockOmopSketch overall    overall     overall     overall      #> 10         1 mockOmopSketch overall    overall     overall     overall      #> 11         1 mockOmopSketch overall    overall     overall     overall      #> 12         1 mockOmopSketch overall    overall     overall     overall      #> 13         1 mockOmopSketch overall    overall     overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseRecordCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","title":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","text":"Summarise record counts omop_table using specific time interval. records fall within observation period considered.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseRecordCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","text":"","code":"summariseRecordCount(   cdm,   omopTableName,   interval = \"overall\",   ageGroup = NULL,   sex = FALSE,   sample = NULL,   dateRange = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseRecordCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","text":"cdm cdm_reference object. omopTableName character vector omop tables cdm. interval Time interval stratify . can either \"years\", \"quarters\", \"months\" \"overall\". ageGroup list age groups stratify results . sex Whether stratify sex (TRUE) (FALSE). sample integer sample tables number records. NULL sample done. dateRange list containing minimum maximum dates defining time range within analysis performed.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseRecordCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","text":"summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseRecordCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","text":"","code":"# \\donttest{ library(dplyr, warn.conflicts = FALSE)  cdm <- mockOmopSketch()  summarisedResult <- summariseRecordCount(   cdm = cdm,   omopTableName = c(\"condition_occurrence\", \"drug_exposure\"),   interval = \"years\",   ageGroup = list(\"<=20\" = c(0,20), \">20\" = c(21, Inf)),   sex = TRUE )  summarisedResult |>   glimpse() #> Rows: 855 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"mockOmopSketch\", \"mockOmopSketch\", \"mockOmopSketch\",… #> $ group_name       <chr> \"omop_table\", \"omop_table\", \"omop_table\", \"omop_table… #> $ group_level      <chr> \"condition_occurrence\", \"condition_occurrence\", \"cond… #> $ strata_name      <chr> \"overall\", \"age_group\", \"age_group\", \"sex\", \"sex\", \"o… #> $ strata_level     <chr> \"overall\", \"<=20\", \">20\", \"Male\", \"Female\", \"overall\"… #> $ variable_name    <chr> \"Number records\", \"Number records\", \"Number records\",… #> $ variable_level   <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ estimate_name    <chr> \"count\", \"count\", \"count\", \"count\", \"count\", \"count\",… #> $ estimate_type    <chr> \"integer\", \"integer\", \"integer\", \"integer\", \"integer\"… #> $ estimate_value   <chr> \"1900\", \"1010\", \"890\", \"1140\", \"760\", \"22\", \"80\", \"14… #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"…  PatientProfiles::mockDisconnect(cdm = cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableClinicalRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","title":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","text":"Create visual table summariseClinicalRecord() output.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","text":"","code":"tableClinicalRecords(result, type = \"gt\")"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","text":"result Output summariseClinicalRecords(). type Type formatting output table, either \"gt\" \"flextable\".","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","text":"gt flextable object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","text":"","code":"# \\donttest{ cdm <- mockOmopSketch()  summarisedResult <- summariseClinicalRecords(   cdm = cdm,   omopTableName = c(\"condition_occurrence\", \"drug_exposure\"),   recordsPerPerson = c(\"mean\", \"sd\"),   inObservation = TRUE,   standardConcept = TRUE,   sourceVocabulary = TRUE,   domainId = TRUE,   typeConcept = TRUE ) #> ℹ Adding variables of interest to condition_occurrence. #> ℹ Summarising records per person in condition_occurrence. #> ℹ Summarising condition_occurrence: `in_observation`, `standard_concept`, #>   `source_vocabulary`, `domain_id`, and `type_concept`. #> ℹ Adding variables of interest to drug_exposure. #> ℹ Summarising records per person in drug_exposure. #> ℹ Summarising drug_exposure: `in_observation`, `standard_concept`, #>   `source_vocabulary`, `domain_id`, and `type_concept`.  summarisedResult |>   suppress(minCellCount = 5) |>   tableClinicalRecords()     Variable name       Variable level       Estimate name                Database name            mockOmopSketch     condition_occurrence     Number subjects - N (%) 100 (100.00%)Number records - N 1,900Records per person - Mean (SD) 19.00 (4.30)In observation Yes N (%) 1,900 (100.00%)Standard concept S N (%) 600 (31.58%) - N (%) 1,300 (68.42%)Source vocabulary No matching concept N (%) 1,900 (100.00%)Type concept id Unknown type concept: 1 N (%) 1,900 (100.00%)drug_exposure     Number subjects - N (%) 100 (100.00%)Number records - N 5,600Records per person - Mean (SD) 56.00 (6.94)In observation Yes N (%) 5,600 (100.00%)Standard concept C N (%) 1,500 (26.79%) S N (%) 3,100 (55.36%) - N (%) 1,000 (17.86%)Source vocabulary No matching concept N (%) 5,600 (100.00%)Type concept id Unknown type concept: 1 N (%) 5,600 (100.00%) PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableConceptIdCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a visual table from a summariseConceptIdCounts() result. — tableConceptIdCounts","title":"Create a visual table from a summariseConceptIdCounts() result. — tableConceptIdCounts","text":"Create visual table summariseConceptIdCounts() result.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableConceptIdCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a visual table from a summariseConceptIdCounts() result. — tableConceptIdCounts","text":"","code":"tableConceptIdCounts(result, type = \"gt\")"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableConceptIdCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a visual table from a summariseConceptIdCounts() result. — tableConceptIdCounts","text":"result summarised_result object. type Type formatting output table, either \"gt\" \"flextable\".","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableConceptIdCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a visual table from a summariseConceptIdCounts() result. — tableConceptIdCounts","text":"gt flextable object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableMissingData.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a visual table from a summariseMissingData() result. — tableMissingData","title":"Create a visual table from a summariseMissingData() result. — tableMissingData","text":"Create visual table summariseMissingData() result.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableMissingData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a visual table from a summariseMissingData() result. — tableMissingData","text":"","code":"tableMissingData(result, type = \"gt\")"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableMissingData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a visual table from a summariseMissingData() result. — tableMissingData","text":"result summarised_result object. type Type formatting output table, either \"gt\" \"flextable\".","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableMissingData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a visual table from a summariseMissingData() result. — tableMissingData","text":"gt flextable object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableObservationPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","title":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","text":"Create visual table summariseObservationPeriod() result.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","text":"","code":"tableObservationPeriod(result, type = \"gt\")"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","text":"result summarised_result object. type Type formatting output table, either \"gt\" \"flextable\".","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","text":"gt flextable object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","text":"","code":"# \\donttest{ cdm <- mockOmopSketch(numberIndividuals = 100)  result <- summariseObservationPeriod(cdm$observation_period)  tableObservationPeriod(result)     Observation period ordinal       Variable name       Estimate name                CDM name            mockOmopSketch     all Number records N 100 Number subjects N 100 Records per person mean (sd) 1.00 (0.00)  median [Q25 - Q75] 1 [1 - 1] Duration in days mean (sd) 4,349.79 (4,181.68)  median [Q25 - Q75] 2,778 [1,178 - 6,557]1st Number subjects N 100 Duration in days mean (sd) 4,349.79 (4,181.68)  median [Q25 - Q75] 2,778 [1,178 - 6,557] PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","title":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","text":"Create visual table summarise_omop_snapshot result.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","text":"","code":"tableOmopSnapshot(result, type = \"gt\")"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","text":"result Output summariseOmopSnapshot(). type Type formatting output table, either \"gt\" \"flextable\".","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","text":"gt flextable object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","text":"","code":"cdm <- mockOmopSketch(numberIndividuals = 10)  result <- summariseOmopSnapshot(cdm)  result |>   tableOmopSnapshot()     Estimate                Database name            mockOmopSketch     General     Snapshot date 2025-01-08Person count 10Vocabulary version -Observation period     N 10Start date 1973-12-25End date 2016-11-25Cdm     Source name mockVersion 5.3Holder name -Release date -Description -Documentation reference -Source type duckdb PatientProfiles::mockDisconnect(cdm)"}]
