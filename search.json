[{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Summarise clinical tables records","text":"vignette, explore OmopSketch functions designed provide overview clinical tables within CDM object (observation_period, visit_occurrence, condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, measurement, observation, death). Specifically, four key functions facilitate : summariseClinicalRecords() tableClinicalRecords(): Use create summary statistics key basic information clinical table (e.g., number fo records, number concepts mapped, etc.) summariseRecordCount() plotRecordCount(): Use summarise number records within specific time interval.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"create-a-mock-cdm","dir":"Articles","previous_headings":"Introduction","what":"Create a mock cdm","title":"Summarise clinical tables records","text":"Let’s see example funcionalities. start , load essential packages create mock cdm using Eunomia database.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(CDMConnector) library(DBI) library(duckdb) library(OmopSketch)  # Connect to Eunomia database con <- DBI::dbConnect(duckdb::duckdb(), CDMConnector::eunomia_dir()) cdm <- CDMConnector::cdmFromCon(   con = con, cdmSchema = \"main\", writeSchema = \"main\" ) #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid  cdm  #>  #> ── # OMOP CDM reference (duckdb) of Synthea synthetic health database ────────── #> • omop tables: person, observation_period, visit_occurrence, visit_detail, #> condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, #> measurement, observation, death, note, note_nlp, specimen, fact_relationship, #> location, care_site, provider, payer_plan_period, cost, drug_era, dose_era, #> condition_era, metadata, cdm_source, concept, vocabulary, domain, #> concept_class, concept_relationship, relationship, concept_synonym, #> concept_ancestor, source_to_concept_map, drug_strength #> • cohort tables: - #> • achilles tables: - #> • other tables: -"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"summarise-clinical-tables","dir":"Articles","previous_headings":"","what":"Summarise clinical tables","title":"Summarise clinical tables records","text":"Let’s now use summariseClinicalTables()OmopSketch package help us overview one clinical tables cdm (.e., condition_occurrence). Notice output summarised result format. can use arguments specify statistics want perform. example, use argument recordsPerPerson indicate estimants interested regarding number records per person. can specify want include number records observation (inObservation = TRUE), number concepts mapped (standardConcept = TRUE), types source vocabulary table contain (sourceVocabulary = TRUE), types domain vocabulary (domainId = TRUE) concept’s type (typeConcept = TRUE).","code":"# Connect to Eunomia database summarisedResult <- summariseClinicalRecords(cdm, \"condition_occurrence\") #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-09-18 14:21:53.211946 #>  #> ✔ Summary finished, at 2024-09-18 14:21:53.350179 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, median, q25, q75, min, max #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-09-18 14:21:54.235202 #>  #> ✔ Summary finished, at 2024-09-18 14:21:54.287268 #> ℹ Summarising in_observation, standard, domain_id, and type information  summarisedResult |> print() #> # A tibble: 20 × 13 #>    result_id cdm_name            group_name group_level strata_name strata_level #>        <int> <chr>               <chr>      <chr>       <chr>       <chr>        #>  1         1 Synthea synthetic … omop_table condition_… overall     overall      #>  2         1 Synthea synthetic … omop_table condition_… overall     overall      #>  3         1 Synthea synthetic … omop_table condition_… overall     overall      #>  4         1 Synthea synthetic … omop_table condition_… overall     overall      #>  5         1 Synthea synthetic … omop_table condition_… overall     overall      #>  6         1 Synthea synthetic … omop_table condition_… overall     overall      #>  7         1 Synthea synthetic … omop_table condition_… overall     overall      #>  8         1 Synthea synthetic … omop_table condition_… overall     overall      #>  9         1 Synthea synthetic … omop_table condition_… overall     overall      #> 10         1 Synthea synthetic … omop_table condition_… overall     overall      #> 11         1 Synthea synthetic … omop_table condition_… overall     overall      #> 12         1 Synthea synthetic … omop_table condition_… overall     overall      #> 13         1 Synthea synthetic … omop_table condition_… overall     overall      #> 14         1 Synthea synthetic … omop_table condition_… overall     overall      #> 15         1 Synthea synthetic … omop_table condition_… overall     overall      #> 16         1 Synthea synthetic … omop_table condition_… overall     overall      #> 17         1 Synthea synthetic … omop_table condition_… overall     overall      #> 18         1 Synthea synthetic … omop_table condition_… overall     overall      #> 19         1 Synthea synthetic … omop_table condition_… overall     overall      #> 20         1 Synthea synthetic … omop_table condition_… overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr> summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\")) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-09-18 14:21:58.2925 #>  #> ✔ Summary finished, at 2024-09-18 14:21:58.431797 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, q05, q95 #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-09-18 14:21:59.408611 #>  #> ✔ Summary finished, at 2024-09-18 14:21:59.45078 #> ℹ Summarising in_observation, standard, domain_id, and type information  summarisedResult |>      filter(variable_name == \"records_per_person\") |>     select(variable_name, estimate_name, estimate_value) #> # A tibble: 4 × 3 #>   variable_name      estimate_name estimate_value   #>   <chr>              <chr>         <chr>            #> 1 records_per_person mean          24.2509279881218 #> 2 records_per_person sd            7.40646270618153 #> 3 records_per_person q05           14               #> 4 records_per_person q95           38 summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\"),                                              inObservation = TRUE,                                              standardConcept = TRUE,                                              sourceVocabulary = TRUE,                                              domainId = TRUE,                                              typeConcept = TRUE) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-09-18 14:22:03.322055 #>  #> ✔ Summary finished, at 2024-09-18 14:22:03.460688 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, q05, q95 #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-09-18 14:22:04.340489 #>  #> ✔ Summary finished, at 2024-09-18 14:22:04.384222 #> ℹ Summarising in_observation, standard, domain_id, source, and type information  summarisedResult |>    select(variable_name, estimate_name, estimate_value) |>    glimpse() #> Rows: 23 #> Columns: 3 #> $ variable_name  <chr> \"number records\", \"number subjects\", \"number subjects\",… #> $ estimate_name  <chr> \"count\", \"count\", \"percentage\", \"mean\", \"sd\", \"q05\", \"q… #> $ estimate_value <chr> \"65332\", \"2694\", \"100\", \"24.2509279881218\", \"7.40646270…"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"tidy-the-summarised-object","dir":"Articles","previous_headings":"Summarise clinical tables","what":"Tidy the summarised object","title":"Summarise clinical tables records","text":"tableClinicalRecords() help tidy previous results create gt table.","code":"summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\"),                                              inObservation = TRUE,                                              standardConcept = TRUE,                                              sourceVocabulary = TRUE,                                              domainId = TRUE,                                              typeConcept = TRUE) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-09-18 14:22:08.452068 #>  #> ✔ Summary finished, at 2024-09-18 14:22:08.595486 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, q05, q95 #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-09-18 14:22:09.497801 #>  #> ✔ Summary finished, at 2024-09-18 14:22:09.540606 #> ℹ Summarising in_observation, standard, domain_id, source, and type information  summarisedResult |>    tableClinicalRecords() #> ! Results have not been suppressed."},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"summarise-record-counts","dir":"Articles","previous_headings":"","what":"Summarise record counts","title":"Summarise clinical tables records","text":"OmopSketch can also help summarise trend records omop table. See example , use summariseRecordCount() count number records within year, , use plotRecordCount() create ggplot trend.  Note can adjust time interval period using unit argument, can set either “year” “month”, unitInterval argument, must integer specifying number years months count records. See example , shows number records every 18 months:  can stratify counts sex (setting argument sex = TRUE) age (providing age group). Notice cases, function automatically create group called overall sex groups age groups.  default, plotRecordCount() apply faceting variables. However, can use facet argument indicate columns summarised result (either group_level, strata_level variable_level) want facet . variables specified, different colours used instead.  Finally, disconnect cdm","code":"summarisedResult <- summariseRecordCount(cdm, \"drug_exposure\", unit = \"year\", unitInterval = 1)  summarisedResult |> print() #> # A tibble: 111 × 13 #>    result_id cdm_name            group_name group_level strata_name strata_level #>        <int> <chr>               <chr>      <chr>       <chr>       <chr>        #>  1         1 Synthea synthetic … omop_table drug_expos… overall     overall      #>  2         1 Synthea synthetic … omop_table drug_expos… overall     overall      #>  3         1 Synthea synthetic … omop_table drug_expos… overall     overall      #>  4         1 Synthea synthetic … omop_table drug_expos… overall     overall      #>  5         1 Synthea synthetic … omop_table drug_expos… overall     overall      #>  6         1 Synthea synthetic … omop_table drug_expos… overall     overall      #>  7         1 Synthea synthetic … omop_table drug_expos… overall     overall      #>  8         1 Synthea synthetic … omop_table drug_expos… overall     overall      #>  9         1 Synthea synthetic … omop_table drug_expos… overall     overall      #> 10         1 Synthea synthetic … omop_table drug_expos… overall     overall      #> # ℹ 101 more rows #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>  summarisedResult |> plotRecordCount() summariseRecordCount(cdm, \"drug_exposure\", unit = \"month\", unitInterval = 18) |>    plotRecordCount() summariseRecordCount(cdm, \"drug_exposure\",                       unit = \"month\",                        unitInterval = 18,                        sex = TRUE,                        ageGroup = list(\"20-29\" = c(20,29),                                      \"30-39\" = c(30,39))) |>    plotRecordCount() summariseRecordCount(cdm, \"drug_exposure\",                       unit = \"month\",                        unitInterval = 18,                        sex = TRUE) |>      plotRecordCount(facet = omop_table ~ sex) PatientProfiles::mockDisconnect(cdm = cdm)"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marta Alcalde-Herraiz. Author, maintainer. Kim Lopez-Guell. Author. Elin Rowlands. Author. Yuchen Guo. Contributor. Marti Catala. Author.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alcalde-Herraiz M, Lopez-Guell K, Rowlands E, Catala M (2024). OmopSketch: Package (One Line, Title Case). R package version 0.0.0.9000, https://oxford-pharmacoepi.github.io/OmopSketch/.","code":"@Manual{,   title = {OmopSketch: What the Package Does (One Line, Title Case)},   author = {Marta Alcalde-Herraiz and Kim Lopez-Guell and Elin Rowlands and Marti Catala},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://oxford-pharmacoepi.github.io/OmopSketch/}, }"},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/index.html","id":"warning-this-package-is-under-development","dir":"","previous_headings":"","what":"WARNING: this package is under-development","title":"What the Package Does (One Line, Title Case)","text":"goal OmopSketch characterise visualise OMOP CDM instance asses meets necessary criteria answer specific clinical question conduct certain study.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version OmopSketch GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"oxford-pharmacoepi/OmopSketch\")"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"Let’s start creating cdm object using Eunomia mock dataset:","code":"library(duckdb) #> Warning: package 'duckdb' was built under R version 4.3.3 #> Loading required package: DBI #> Warning: package 'DBI' was built under R version 4.3.3 library(CDMConnector) #> Warning: package 'CDMConnector' was built under R version 4.3.3 library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(OmopSketch) con <- dbConnect(duckdb(), eunomia_dir()) cdm <- cdmFromCon(con = con, cdmSchema = \"main\", writeSchema = \"main\") #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid cdm #>  #> ── # OMOP CDM reference (duckdb) of Synthea synthetic health database ────────── #> • omop tables: person, observation_period, visit_occurrence, visit_detail, #> condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, #> measurement, observation, death, note, note_nlp, specimen, fact_relationship, #> location, care_site, provider, payer_plan_period, cost, drug_era, dose_era, #> condition_era, metadata, cdm_source, concept, vocabulary, domain, #> concept_class, concept_relationship, relationship, concept_synonym, #> concept_ancestor, source_to_concept_map, drug_strength #> • cohort tables: - #> • achilles tables: - #> • other tables: -"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/index.html","id":"snapshot","dir":"","previous_headings":"Example","what":"Snapshot","title":"What the Package Does (One Line, Title Case)","text":"first create snapshot database. allow us track analysis conducted capture details CDM version data release.","code":"summariseOmopSnapshot(cdm) #> # A tibble: 13 × 13 #>    result_id cdm_name            group_name group_level strata_name strata_level #>        <int> <chr>               <chr>      <chr>       <chr>       <chr>        #>  1         1 Synthea synthetic … overall    overall     overall     overall      #>  2         1 Synthea synthetic … overall    overall     overall     overall      #>  3         1 Synthea synthetic … overall    overall     overall     overall      #>  4         1 Synthea synthetic … overall    overall     overall     overall      #>  5         1 Synthea synthetic … overall    overall     overall     overall      #>  6         1 Synthea synthetic … overall    overall     overall     overall      #>  7         1 Synthea synthetic … overall    overall     overall     overall      #>  8         1 Synthea synthetic … overall    overall     overall     overall      #>  9         1 Synthea synthetic … overall    overall     overall     overall      #> 10         1 Synthea synthetic … overall    overall     overall     overall      #> 11         1 Synthea synthetic … overall    overall     overall     overall      #> 12         1 Synthea synthetic … overall    overall     overall     overall      #> 13         1 Synthea synthetic … overall    overall     overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr> # ADD TABLE OMOP SNAPSHOT"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/index.html","id":"characterise-the-clinical-tables","dir":"","previous_headings":"Example","what":"Characterise the clinical tables","title":"What the Package Does (One Line, Title Case)","text":"collected snapshot information, can start characteristing clinical tables CDM. using summariseClinicalRecords() tableClinicalRecords(), can easily visualise main characteristics specific clinical tables. can also explore trends clinical table records time. ### Characterise observation period visualising main characteristics clinical tables, can explore observation period details. OmopSketch provides several functions overwied dataset study period. Using summariseInObservation() plotInObservation(), can gather information number records per year. can also visualise explore characteristics observation period per individual database using summariseObservationPeriod(). visualisation prefered, can easily build histogram explore many participants one observation period.","code":"summariseClinicalRecords(cdm, c(\"condition_occurrence\", \"drug_exposure\")) |>   tableClinicalRecords() #> ℹ Summarising table counts #> ℹ Summarising records per person #> ℹ Summarising in observation, standard, domain id, and type information #> ℹ Summarising table counts #> ℹ Summarising records per person #> ℹ Summarising in observation, standard, domain id, and type information summariseRecordCount(cdm, c(\"condition_occurrence\", \"drug_exposure\")) |>   plotRecordCount(facet = \"group_level\") #> Warning: The `facets` argument of `facet_grid()` is deprecated as of ggplot2 2.2.0. #> ℹ Please use the `rows` argument instead. #> ℹ The deprecated feature was likely used in the OmopSketch package. #>   Please report the issue at #>   <https://github.com/oxford-pharmacoepi/OmopSketch/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. summariseInObservation(cdm$observation_period, output = \"records\") |>   plotInObservation() #> Warning: ! 1 casted column in omop_table (cohort_set) as do not match expected column #>   type: #> • `cohort_definition_id` from numeric to integer #> Warning: ! 1 column in omop_table do not match expected column type: #> • `cohort_definition_id` is numeric but expected integer #> Warning: ! 1 column in tmp_001_og_002_1726511481 do not match expected column type: #> • `cohort_definition_id` is numeric but expected integer summariseObservationPeriod(cdm$observation_period) |>   tableObservationPeriod() #> ! Results have not been suppressed. summariseObservationPeriod(cdm$observation_period) |>   plotObservationPeriod()"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/index.html","id":"characterise-the-concepts","dir":"","previous_headings":"Example","what":"Characterise the concepts","title":"What the Package Does (One Line, Title Case)","text":"OmopSketch also provides functions explore () concepts dataset.","code":"acetaminophen <- c(1125315,  1127433, 40229134, 40231925, 40162522, 19133768,  1127078) summariseConceptCounts(cdm, conceptId = list(\"acetaminophen\" = acetaminophen)) #> ℹ Getting use of codes from acetaminophen #> # A tibble: 14 × 13 #>    result_id cdm_name            group_name group_level strata_name strata_level #>        <int> <chr>               <chr>      <chr>       <chr>       <chr>        #>  1         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #>  2         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #>  3         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #>  4         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #>  5         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #>  6         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #>  7         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #>  8         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #>  9         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #> 10         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #> 11         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #> 12         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #> 13         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #> 14         1 Synthea synthetic … codelist_… acetaminop… overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/index.html","id":"characterise-the-population","dir":"","previous_headings":"Example","what":"Characterise the population","title":"What the Package Does (One Line, Title Case)","text":"Finally, OmopSketch can also help us characterise population start end observation period. seen, OmopSketch offers multiple functionalities provide general overview database. Additionally, includes tools arguments allow deeper exploration, helping assess database’s suitability specific research studies. information, please refer vignettes.","code":"summarisePopulationCharacteristics(cdm) #> Warning: ! 1 casted column in og_007_1726511493 (cohort_set) as do not match expected #>   column type: #> • `cohort_definition_id` from numeric to integer #> Warning: ! 1 column in og_007_1726511493 do not match expected column type: #> • `cohort_definition_id` is numeric but expected integer #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ℹ Building new trimmed cohort #> Warning: ! 1 column in tmp_004_og_009_1726511493 do not match expected column type: #> • `cohort_definition_id` is numeric but expected integer #> Creating initial cohort #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ✔ Cohort trimmed #> ℹ adding demographics columns #>  #> ℹ summarising data #>  #> ✔ summariseCharacteristics finished! #> # A tibble: 42 × 13 #>    result_id cdm_name            group_name group_level strata_name strata_level #>        <int> <chr>               <chr>      <chr>       <chr>       <chr>        #>  1         1 Synthea synthetic … cohort_na… demographi… overall     overall      #>  2         1 Synthea synthetic … cohort_na… demographi… overall     overall      #>  3         1 Synthea synthetic … cohort_na… demographi… overall     overall      #>  4         1 Synthea synthetic … cohort_na… demographi… overall     overall      #>  5         1 Synthea synthetic … cohort_na… demographi… overall     overall      #>  6         1 Synthea synthetic … cohort_na… demographi… overall     overall      #>  7         1 Synthea synthetic … cohort_na… demographi… overall     overall      #>  8         1 Synthea synthetic … cohort_na… demographi… overall     overall      #>  9         1 Synthea synthetic … cohort_na… demographi… overall     overall      #> 10         1 Synthea synthetic … cohort_na… demographi… overall     overall      #> # ℹ 32 more rows #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/OmopSketch-package.html","id":null,"dir":"Reference","previous_headings":"","what":"OmopSketch: What the Package Does (One Line, Title Case) — OmopSketch-package","title":"OmopSketch: What the Package Does (One Line, Title Case) — OmopSketch-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/OmopSketch-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OmopSketch: What the Package Does (One Line, Title Case) — OmopSketch-package","text":"Maintainer: Marta Alcalde-Herraiz marta.alcaldeherraiz@ndorms.ox.ac.uk (ORCID) Authors: Kim Lopez-Guell kim.lopez@spc.ox.ac.uk (ORCID) Elin Rowlands elin.rowlands@ndorms.ox.ac.uk Marti Catala marti.catalasabate@ndorms.ox.ac.uk (ORCID) contributors: Yuchen Guo yuchen.guo@ndorms.ox.ac.uk (ORCID) [contributor]","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/mockOmopSketch.html","id":null,"dir":"Reference","previous_headings":"","what":"It creates a mock database for testing OmopSketch package — mockOmopSketch","title":"It creates a mock database for testing OmopSketch package — mockOmopSketch","text":"creates mock database testing OmopSketch package","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/mockOmopSketch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"It creates a mock database for testing OmopSketch package — mockOmopSketch","text":"","code":"mockOmopSketch(con = NULL, writeSchema = NULL, numberIndividuals = 100)"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/mockOmopSketch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"It creates a mock database for testing OmopSketch package — mockOmopSketch","text":"con DBI connection create cdm mock object. default, connection \"duckdb\". writeSchema Name schema connection writing permissions. numberIndividuals Number individuals create cdm reference.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/mockOmopSketch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"It creates a mock database for testing OmopSketch package — mockOmopSketch","text":"mock cdm_reference object created following user's specifications.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/mockOmopSketch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"It creates a mock database for testing OmopSketch package — mockOmopSketch","text":"","code":"# \\donttest{ mockOmopSketch(numberIndividuals = 1000,                writeSchema = NULL,                con = NULL) #> Note: method with signature ‘DBIConnection#Id’ chosen for function ‘dbExistsTable’, #>  target signature ‘duckdb_connection#Id’. #>  \"duckdb_connection#ANY\" would also be valid #>  #> ── # OMOP CDM reference (duckdb) of mockOmopSketch ───────────────────────────── #> • omop tables: person, observation_period, cdm_source, concept, vocabulary, #> concept_relationship, concept_synonym, concept_ancestor, drug_strength, #> condition_occurrence, death, drug_exposure, measurement, observation, #> procedure_occurrence, device_exposure, visit_occurrence #> • cohort tables: - #> • achilles tables: - #> • other tables: - # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotInObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a gt table from a summarised omop_table. — plotInObservation","title":"Create a gt table from a summarised omop_table. — plotInObservation","text":"Create gt table summarised omop_table.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotInObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a gt table from a summarised omop_table. — plotInObservation","text":"","code":"plotInObservation(result, facet = NULL, colour = NULL)"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotInObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a gt table from a summarised omop_table. — plotInObservation","text":"result summarised_result object (output summariseInObservation). facet Columns face . Formula format can provided. See possible columns face : visOmopResults::tidyColumns(). colour Columns colour . See possible columns colour : visOmopResults::tidyColumns().","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotInObservation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a gt table from a summarised omop_table. — plotInObservation","text":"ggplot showing table counts","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotInObservation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a gt table from a summarised omop_table. — plotInObservation","text":"","code":"if (FALSE) { # \\dontrun{ library(OmopSketch) library(dplyr)  cdm <- mockOmopSketch()  result <- summariseInObservation(cdm$observation_period,                     unit = \"month\",                     unitInterval = 6,                     output = c(\"person-days\",\"records\"),                     ageGroup = list(\"<=60\" = c(0,60), \">60\" = c(61, Inf)),                     sex = TRUE)  plotInObservation(result)  PatientProfiles::mockDisconnect(cdm) } # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotObservationPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"Create plot output summariseObservationPeriod().","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"","code":"plotObservationPeriod(   result,   variableName = \"number subjects\",   plotType = \"barplot\",   facet = \"cdm_name\" )"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"result summarised_result object. variableName variable plot can : \"number subjects\", \"records per person\", \"duration\" \"days next observation period\". plotType plot type, can : \"barplot\", \"boxplot\" \"densityplot\". facet Elements facet , can \"cdm_name\", \"observation_period_ordinal\", none.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"ggplot2 object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"","code":"if (FALSE) { # \\dontrun{ library(CDMConnector) library(duckdb)  con <- dbConnect(duckdb(), eunomiaDir()) cdm <- cdmFromCon(con = con, cdmSchema = \"main\", writeSchema = \"main\")  result <- summariseObservationPeriod(cdm$observation_period)  result |>   plotObservationPeriod() } # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotRecordCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot of the records' count trend. — plotRecordCount","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"Create ggplot records' count trend.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotRecordCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"","code":"plotRecordCount(result, facet = NULL, colour = NULL)"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotRecordCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"result Output summariseRecordCount(). facet Columns face . Formula format can provided. See possible columns face : visOmopResults::tidyColumns(). colour Columns colour . See possible columns colour : visOmopResults::tidyColumns().","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotRecordCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"ggplot showing table counts","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/plotRecordCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"","code":"# \\donttest{ library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(CDMConnector) library(DBI) library(duckdb) library(OmopSketch)  # Connect to Eunomia database if (Sys.getenv(\"EUNOMIA_DATA_FOLDER\") == \"\") Sys.setenv(\"EUNOMIA_DATA_FOLDER\" = tempdir()) if (!dir.exists(Sys.getenv(\"EUNOMIA_DATA_FOLDER\"))) dir.create(Sys.getenv(\"EUNOMIA_DATA_FOLDER\")) if (!eunomia_is_available()) downloadEunomiaData() #>  #> Download completed! con <- DBI::dbConnect(duckdb::duckdb(), CDMConnector::eunomia_dir()) #> Creating CDM database /tmp/RtmpZdOBOK/GiBleed_5.3.zip cdm <- CDMConnector::cdmFromCon( con = con, cdmSchema = \"main\", writeSchema = \"main\" )  # Run summarise clinical tables summarisedResult <- summariseRecordCount(cdm = cdm,                                          omopTableName = \"condition_occurrence\",                                          unit = \"year\",                                          unitInterval = 10,                                          ageGroup = list(\"<=20\" = c(0,20), \">20\" = c(21, Inf)),                                          sex = TRUE) plotRecordCount(summarisedResult, facet = sex + age_group ~ .)  PatientProfiles::mockDisconnect(cdm = cdm) # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. omopgenerics bind, exportSummarisedResult, importSummarisedResult, settings, suppress","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"Summarise omop table cdm object. obtain information related number records, number subjects, whether records observation, number present domains number present concepts.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"","code":"summariseClinicalRecords(   cdm,   omopTableName,   recordsPerPerson = c(\"mean\", \"sd\", \"median\", \"q25\", \"q75\", \"min\", \"max\"),   inObservation = TRUE,   standardConcept = TRUE,   sourceVocabulary = FALSE,   domainId = TRUE,   typeConcept = TRUE,   sex = FALSE,   ageGroup = NULL )"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"cdm cdm object. omopTableName character vector names tables summarise cdm object. recordsPerPerson Generates summary statistics number records per person. Set NULL summary statistics required. inObservation Boolean variable. Whether include percentage records observation. standardConcept Boolean variable. Whether summarise standard concept information. sourceVocabulary Boolean variable.  Whether summarise source vocabulary information. domainId Boolean variable. Whether summarise domain id standard concept id information. typeConcept Boolean variable. Whether summarise type concept id field information. sex Boolean variable. Whether stratify sex (TRUE) (FALSE). ageGroup list age groups stratify results .","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"summarised_result object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"","code":"# \\donttest{ library(dplyr) library(CDMConnector) library(DBI) library(duckdb) library(OmopSketch)  # Connect to Eunomia database if (Sys.getenv(\"EUNOMIA_DATA_FOLDER\") == \"\") Sys.setenv(\"EUNOMIA_DATA_FOLDER\" = tempdir()) if (!dir.exists(Sys.getenv(\"EUNOMIA_DATA_FOLDER\"))) dir.create(Sys.getenv(\"EUNOMIA_DATA_FOLDER\")) if (!eunomia_is_available()) downloadEunomiaData() con <- DBI::dbConnect(duckdb::duckdb(), CDMConnector::eunomia_dir()) cdm <- CDMConnector::cdmFromCon( con = con, cdmSchema = \"main\", writeSchema = \"main\" )  # Run summarise clinical tables summarisedResult <- summariseClinicalRecords(cdm = cdm,                                             omopTableName = \"condition_occurrence\",                                             recordsPerPerson = c(\"mean\", \"sd\"),                                             inObservation = TRUE,                                             standardConcept = TRUE,                                             sourceVocabulary = TRUE,                                             domainId = TRUE,                                             typeConcept = TRUE) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-09-18 14:20:54.466219 #> ✔ Summary finished, at 2024-09-18 14:20:54.609411 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd #> → Start summary of data, at 2024-09-18 14:20:55.407608 #> ✔ Summary finished, at 2024-09-18 14:20:55.603213 #> ℹ Summarising in_observation, standard, domain_id, source, and type information summarisedResult |> print() #> # A tibble: 21 × 13 #>    result_id cdm_name            group_name group_level strata_name strata_level #>        <int> <chr>               <chr>      <chr>       <chr>       <chr>        #>  1         1 Synthea synthetic … omop_table condition_… overall     overall      #>  2         1 Synthea synthetic … omop_table condition_… overall     overall      #>  3         1 Synthea synthetic … omop_table condition_… overall     overall      #>  4         1 Synthea synthetic … omop_table condition_… overall     overall      #>  5         1 Synthea synthetic … omop_table condition_… overall     overall      #>  6         1 Synthea synthetic … omop_table condition_… overall     overall      #>  7         1 Synthea synthetic … omop_table condition_… overall     overall      #>  8         1 Synthea synthetic … omop_table condition_… overall     overall      #>  9         1 Synthea synthetic … omop_table condition_… overall     overall      #> 10         1 Synthea synthetic … omop_table condition_… overall     overall      #> # ℹ 11 more rows #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr> PatientProfiles::mockDisconnect(cdm = cdm) # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseConceptCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise code use in patient-level data — summariseConceptCounts","title":"Summarise code use in patient-level data — summariseConceptCounts","text":"Summarise code use patient-level data","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise code use in patient-level data — summariseConceptCounts","text":"","code":"summariseConceptCounts(   cdm,   conceptId = NULL,   countBy = c(\"record\", \"person\"),   concept = TRUE,   year = FALSE,   sex = FALSE,   ageGroup = NULL )"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise code use in patient-level data — summariseConceptCounts","text":"cdm cdm object conceptId List concept IDs summarise. NULL, concepts concept table used countBy Either \"record\" record-level counts \"person\" person-level counts concept TRUE FALSE. TRUE code use summarised concept. year TRUE FALSE. TRUE code use summarised year. sex TRUE FALSE. TRUE code use summarised sex. ageGroup NULL, list ageGroup vectors length two. Code use thus summarised age groups.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise code use in patient-level data — summariseConceptCounts","text":"tibble results overall , specified, strata","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise code use in patient-level data — summariseConceptCounts","text":"","code":"if (FALSE) { # \\dontrun{ con <- DBI::dbConnect(duckdb::duckdb(),                       dbdir = CDMConnector::eunomia_dir()) cdm <- CDMConnector::cdm_from_con(con,                                   cdm_schem = \"main\",                                   write_schema = \"main\") acetiminophen <- c(1125315,  1127433, 40229134, 40231925, 40162522, 19133768,  1127078) poliovirus_vaccine <- c(40213160) cs <- list(acetiminophen = acetiminophen,           poliovirus_vaccine = poliovirus_vaccine) results <- summariseCodeUse(cdm, conceptId = cs) results CDMConnector::cdmDisconnect(cdm) } # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseInObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summarised result with the number of people in observation during a specific interval of time. — summariseInObservation","title":"Create a summarised result with the number of people in observation during a specific interval of time. — summariseInObservation","text":"Create summarised result number people observation specific interval time.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseInObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summarised result with the number of people in observation during a specific interval of time. — summariseInObservation","text":"","code":"summariseInObservation(   observationPeriod,   unit = \"year\",   unitInterval = 1,   output = \"records\",   ageGroup = NULL,   sex = FALSE )"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseInObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summarised result with the number of people in observation during a specific interval of time. — summariseInObservation","text":"observationPeriod observation_period omop table. unit Whether stratify \"year\" \"month\". unitInterval Number years months include within time interval. output Output format. can either number records (\"records\") observation specific interval time, number person-days (\"person-days\"), c(\"records\",\"person-days\"). ageGroup list age groups stratify results . sex Boolean variable. Whether stratify sex (TRUE) (FALSE).","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseInObservation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summarised result with the number of people in observation during a specific interval of time. — summariseInObservation","text":"summarised_result object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseInObservation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summarised result with the number of people in observation during a specific interval of time. — summariseInObservation","text":"","code":"if (FALSE) { # \\dontrun{ library(OmopSketch) library(dplyr)  cdm <- mockOmopSketch()  result <- summariseInObservation(cdm$observation_period,                     unit = \"month\",                     unitInterval = 6,                     output = c(\"person-days\",\"records\"),                     ageGroup = list(\"<=60\" = c(0,60), \">60\" = c(61, Inf)),                     sex = TRUE)  result |>   dplyr::glimpse()  PatientProfiles::mockDisconnect(cdm) } # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"Summarise observation period table getting overall statistics summarised_result object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"","code":"summariseObservationPeriod(   observationPeriod,   estimates = c(\"mean\", \"sd\", \"min\", \"q05\", \"q25\", \"median\", \"q75\", \"q95\", \"max\"),   density = FALSE )"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"observationPeriod observation_period omop table. estimates Estimates summarise variables interest ( records per person, duration days next observation period). density Whether export density data time observation periods.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"summarised_result object summarised data.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"","code":"if (FALSE) { # \\dontrun{ library(OmopSketch) library(dplyr)  cdm <- mockOmopSketch()  result <- summariseObservationPeriod(cdm$observation_period)  result |>   dplyr::glimpse()  PatientProfiles::mockDisconnect(cdm) } # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise OMOP database and create snapshot — summariseOmopSnapshot","title":"Summarise OMOP database and create snapshot — summariseOmopSnapshot","text":"Summarise OMOP database create snapshot","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise OMOP database and create snapshot — summariseOmopSnapshot","text":"","code":"summariseOmopSnapshot(cdm)"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise OMOP database and create snapshot — summariseOmopSnapshot","text":"cdm cdm reference object","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise OMOP database and create snapshot — summariseOmopSnapshot","text":"summarised result object","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise OMOP database and create snapshot — summariseOmopSnapshot","text":"","code":"# example code # \\donttest{ library(OmopSketch)  cdm <- mockOmopSketch(numberIndividuals = 1000)  summariseOmopSnapshot(cdm) #> # A tibble: 13 × 13 #>    result_id cdm_name       group_name group_level strata_name strata_level #>        <int> <chr>          <chr>      <chr>       <chr>       <chr>        #>  1         1 mockOmopSketch overall    overall     overall     overall      #>  2         1 mockOmopSketch overall    overall     overall     overall      #>  3         1 mockOmopSketch overall    overall     overall     overall      #>  4         1 mockOmopSketch overall    overall     overall     overall      #>  5         1 mockOmopSketch overall    overall     overall     overall      #>  6         1 mockOmopSketch overall    overall     overall     overall      #>  7         1 mockOmopSketch overall    overall     overall     overall      #>  8         1 mockOmopSketch overall    overall     overall     overall      #>  9         1 mockOmopSketch overall    overall     overall     overall      #> 10         1 mockOmopSketch overall    overall     overall     overall      #> 11         1 mockOmopSketch overall    overall     overall     overall      #> 12         1 mockOmopSketch overall    overall     overall     overall      #> 13         1 mockOmopSketch overall    overall     overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr> # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summarisePopulationCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the characteristics of the base population of a cdm object. — summarisePopulationCharacteristics","title":"Summarise the characteristics of the base population of a cdm object. — summarisePopulationCharacteristics","text":"Summarise characteristics base population cdm object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summarisePopulationCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the characteristics of the base population of a cdm object. — summarisePopulationCharacteristics","text":"","code":"summarisePopulationCharacteristics(   cdm,   studyPeriod = c(NA, NA),   sex = FALSE,   ageGroup = NULL )"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summarisePopulationCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the characteristics of the base population of a cdm object. — summarisePopulationCharacteristics","text":"cdm cdm object. studyPeriod Dates trim observation period. NA, start_observation_period /end_observation_period used. sex Boolean variable. Whether stratify results sex. ageGroup List age groups stratify index date. Set NULL stratification needed.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summarisePopulationCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the characteristics of the base population of a cdm object. — summarisePopulationCharacteristics","text":"summarised_result object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summarisePopulationCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise the characteristics of the base population of a cdm object. — summarisePopulationCharacteristics","text":"","code":"# \\donttest{ library(dplyr) library(OmopSketch)  # Connect to a mock database cdm <- mockOmopSketch()  # Run summarise population characteristics summarisedPopulation <- summarisePopulationCharacteristics(cdm = cdm,                                                           studyPeriod = c(\"2010-01-01\",NA),                                                           sex = TRUE,                                                           ageGroup = NULL                                                           ) #> Warning: ! 1 casted column in og_003_1726669269 (cohort_set) as do not match expected #>   column type: #> • `cohort_definition_id` from numeric to integer #> Warning: ! 1 column in og_003_1726669269 do not match expected column type: #> • `cohort_definition_id` is numeric but expected integer #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ℹ Building new trimmed cohort #> Warning: ! 1 column in tmp_003_og_005_1726669270 do not match expected column type: #> • `cohort_definition_id` is numeric but expected integer #> Creating initial cohort #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ✔ Cohort trimmed #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished! #> ! The following column type were changed: #> • variable_name: from integer to character summarisedPopulation |> print() #> # A tibble: 122 × 13 #>    result_id cdm_name       group_name  group_level  strata_name strata_level #>        <int> <chr>          <chr>       <chr>        <chr>       <chr>        #>  1         1 mockOmopSketch cohort_name demographics overall     overall      #>  2         1 mockOmopSketch cohort_name demographics sex         Female       #>  3         1 mockOmopSketch cohort_name demographics sex         Male         #>  4         1 mockOmopSketch cohort_name demographics overall     overall      #>  5         1 mockOmopSketch cohort_name demographics sex         Female       #>  6         1 mockOmopSketch cohort_name demographics sex         Male         #>  7         1 mockOmopSketch cohort_name demographics overall     overall      #>  8         1 mockOmopSketch cohort_name demographics overall     overall      #>  9         1 mockOmopSketch cohort_name demographics overall     overall      #> 10         1 mockOmopSketch cohort_name demographics overall     overall      #> # ℹ 112 more rows #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr> PatientProfiles::mockDisconnect(cdm = cdm)  # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseRecordCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summarise result object to summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are counted. — summariseRecordCount","title":"Create a summarise result object to summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are counted. — summariseRecordCount","text":"Create summarise result object summarise record counts omop_table using specific time interval. records fall within observation period counted.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseRecordCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summarise result object to summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are counted. — summariseRecordCount","text":"","code":"summariseRecordCount(   cdm,   omopTableName,   unit = \"year\",   unitInterval = 1,   ageGroup = NULL,   sex = FALSE )"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseRecordCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summarise result object to summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are counted. — summariseRecordCount","text":"cdm cdm object. omopTableName character vector omop tables cdm. unit Whether stratify \"year\" \"month\". unitInterval integer. Number years months include within interval. ageGroup list age groups stratify results . sex Boolean variable. Whether stratify sex (TRUE) (FALSE).","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseRecordCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summarise result object to summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are counted. — summariseRecordCount","text":"summarised_result object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/summariseRecordCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summarise result object to summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are counted. — summariseRecordCount","text":"","code":"# \\donttest{ library(dplyr) library(CDMConnector) library(DBI) library(duckdb) library(OmopSketch)  # Connect to Eunomia database if (Sys.getenv(\"EUNOMIA_DATA_FOLDER\") == \"\") Sys.setenv(\"EUNOMIA_DATA_FOLDER\" = tempdir()) if (!dir.exists(Sys.getenv(\"EUNOMIA_DATA_FOLDER\"))) dir.create(Sys.getenv(\"EUNOMIA_DATA_FOLDER\")) if (!eunomia_is_available()) downloadEunomiaData() con <- DBI::dbConnect(duckdb::duckdb(), CDMConnector::eunomia_dir()) cdm <- CDMConnector::cdmFromCon( con = con, cdmSchema = \"main\", writeSchema = \"main\" )  # Run summarise clinical tables summarisedResult <- summariseRecordCount(cdm = cdm,                                          omopTableName = \"condition_occurrence\",                                          unit = \"year\",                                          unitInterval = 10,                                          ageGroup = list(\"<=20\" = c(0,20), \">20\" = c(21, Inf)),                                          sex = TRUE) summarisedResult |> print() #> # A tibble: 96 × 13 #>    result_id cdm_name            group_name group_level strata_name strata_level #>        <int> <chr>               <chr>      <chr>       <chr>       <chr>        #>  1         1 Synthea synthetic … omop_table condition_… age_group … <=20 &&& Ma… #>  2         1 Synthea synthetic … omop_table condition_… age_group … <=20 &&& Fe… #>  3         1 Synthea synthetic … omop_table condition_… age_group … <=20 &&& Fe… #>  4         1 Synthea synthetic … omop_table condition_… age_group … <=20 &&& Ma… #>  5         1 Synthea synthetic … omop_table condition_… age_group … <=20 &&& Fe… #>  6         1 Synthea synthetic … omop_table condition_… age_group … <=20 &&& Ma… #>  7         1 Synthea synthetic … omop_table condition_… age_group … >20 &&& Fem… #>  8         1 Synthea synthetic … omop_table condition_… age_group … >20 &&& Male #>  9         1 Synthea synthetic … omop_table condition_… age_group … <=20 &&& Fe… #> 10         1 Synthea synthetic … omop_table condition_… age_group … <=20 &&& Ma… #> # ℹ 86 more rows #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr> # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableClinicalRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a gt table from a summarised omop_table. — tableClinicalRecords","title":"Create a gt table from a summarised omop_table. — tableClinicalRecords","text":"Create gt table summarised omop_table.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a gt table from a summarised omop_table. — tableClinicalRecords","text":"","code":"tableClinicalRecords(result)"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a gt table from a summarised omop_table. — tableClinicalRecords","text":"result Output summariseClinicalRecords().","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a gt table from a summarised omop_table. — tableClinicalRecords","text":"gt object summarised data.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a gt table from a summarised omop_table. — tableClinicalRecords","text":"","code":"# \\donttest{ library(dplyr) library(OmopSketch)  # Connect to a mock database cdm <- mockOmopSketch()  # Run summarise clinical tables summarisedResult <- summariseClinicalRecords(cdm = cdm,                                             omopTableName = \"condition_occurrence\",                                             recordsPerPerson = c(\"mean\", \"sd\"),                                             inObservation = TRUE,                                             standardConcept = TRUE,                                             sourceVocabulary = TRUE,                                             domainId = TRUE,                                             typeConcept = TRUE) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-09-18 14:21:24.834652 #> ✔ Summary finished, at 2024-09-18 14:21:24.972267 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd #> → Start summary of data, at 2024-09-18 14:21:25.755615 #> ✔ Summary finished, at 2024-09-18 14:21:25.957006 #> ℹ Summarising in_observation, standard, domain_id, source, and type information tableClinicalRecords(summarisedResult) #> Warning: The `addSettings` argument of `visOmopTable()` is deprecated as of #> visOmopResults 0.4.0. #> ℹ Please use the `settingsColumns` argument instead. #> ℹ The deprecated feature was likely used in the visOmopResults package. #>   Please report the issue at #>   <https://github.com/darwin-eu/visOmopResults/issues>. #> ! Results have not been suppressed.     Variable name       Variable level       Estimate name                Database name            mockOmopSketch     condition_occurrence     number records - N 1,900number subjects - N% 100 (100.00)records_per_person - Mean (SD) 19.00 (4.47)In observation Yes N% 1,900 (100.00)Standard concept Source N% 1,900 (100.00)Source vocabulary No matching concept N% 1,900 (100.00)Domain Condition N% 1,900 (100.00)Type concept id 1 N% 1,900 (100.00)PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableObservationPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table from the output of summariseObservationPeriod(). — tableObservationPeriod","title":"Create a table from the output of summariseObservationPeriod(). — tableObservationPeriod","text":"Create table output summariseObservationPeriod().","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table from the output of summariseObservationPeriod(). — tableObservationPeriod","text":"","code":"tableObservationPeriod(result, type = \"gt\")"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table from the output of summariseObservationPeriod(). — tableObservationPeriod","text":"result summarised result object. type Type table either gt flextable.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table from the output of summariseObservationPeriod(). — tableObservationPeriod","text":"gt flextable table.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a gt table from a summarised omop snapshot — tableOmopSnapshot","title":"Create a gt table from a summarised omop snapshot — tableOmopSnapshot","text":"Create gt table summarised omop snapshot","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a gt table from a summarised omop snapshot — tableOmopSnapshot","text":"","code":"tableOmopSnapshot(result)"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a gt table from a summarised omop snapshot — tableOmopSnapshot","text":"result Output summariseOmopSnapshot()","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a gt table from a summarised omop snapshot — tableOmopSnapshot","text":"gt object summarised data.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a gt table from a summarised omop snapshot — tableOmopSnapshot","text":"","code":"# \\donttest{ library(dplyr) library(OmopSketch)  cdm <- mockOmopSketch(numberIndividuals = 1000)  cdm |> summariseOmopSnapshot() |> tableOmopSnapshot() #> ! Results have not been suppressed.     Estimate                Database name            mockOmopSketch     General     Snapshot date 2024-09-18Person count 1,000Vocabulary version -Observation period     N 1,000Start date 1951-03-30End date 2019-12-31Cdm     Source name mockVersion 5.3Holder name -Release date -Description -Documentation reference -Source type duckdb# }"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tablePopulationCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a gt table from a summarised population characteristics table. — tablePopulationCharacteristics","title":"Create a gt table from a summarised population characteristics table. — tablePopulationCharacteristics","text":"Create gt table summarised population characteristics table.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tablePopulationCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a gt table from a summarised population characteristics table. — tablePopulationCharacteristics","text":"","code":"tablePopulationCharacteristics(result)"},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tablePopulationCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a gt table from a summarised population characteristics table. — tablePopulationCharacteristics","text":"result Output summarisePopulationCharacteristics().","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tablePopulationCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a gt table from a summarised population characteristics table. — tablePopulationCharacteristics","text":"gt object summarised data.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopSketch/reference/tablePopulationCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a gt table from a summarised population characteristics table. — tablePopulationCharacteristics","text":"","code":"# \\donttest{ library(dplyr) library(OmopSketch)  # Connect to a mock database cdm <- mockOmopSketch()  # Run summarise clinical tables summarisedPopulation <- summarisePopulationCharacteristics(                        cdm = cdm,                        studyPeriod = c(\"2010-01-01\",NA),                        sex = TRUE,                        ageGroup = list(\"<=60\" = c(0, 60), \">60\" = c(61, Inf))                        ) #> Warning: ! 1 casted column in og_011_1726669300 (cohort_set) as do not match expected #>   column type: #> • `cohort_definition_id` from numeric to integer #> Warning: ! 1 column in og_011_1726669300 do not match expected column type: #> • `cohort_definition_id` is numeric but expected integer #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ℹ Building new trimmed cohort #> Warning: ! 1 column in tmp_006_og_013_1726669300 do not match expected column type: #> • `cohort_definition_id` is numeric but expected integer #> Creating initial cohort #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ✔ Cohort trimmed #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished! #> ! The following column type were changed: #> • variable_name: from integer to character tablePopulationCharacteristics(summarisedPopulation) #> ! Results have not been suppressed.     Variable name       Variable level       Estimate name                Database name            mockOmopSketch     overall; overall     Number records - N 46Number subjects - N 46Cohort start date - min 2010-01-01  q25 2010-01-01  median 2010-01-01  q75 2013-06-08  max 2017-10-30Cohort end date - min 2010-03-27  q25 2014-07-03  median 2016-10-14  q75 2018-05-27  max 2019-10-05Age at start - Mean (SD) 34.59 (14.02)  min 12  q25 23  median 32  q75 48  max 64Age at end - min 19  q25 27  median 36  q75 51  max 67Sex Female N% 19 (41.30) Male N% 27 (58.70)Prior observation - Mean (SD) 2,734.13 (3,926.05)  min 0  q25 0  median 1,016  q75 3,778  max 15,531Future observation - Mean (SD) 1,669.67 (1,028.85)  min 85  q25 788  median 1,546  q75 2,467  max 3,564<=60; overall     Number records - N 45Number subjects - N 45Cohort start date - min 2010-01-01  q25 2010-01-01  median 2010-01-01  q75 2012-09-10  max 2017-10-30Cohort end date - min 2010-03-27  q25 2014-05-10  median 2016-10-11  q75 2018-05-27  max 2019-10-05Age at start - Mean (SD) 33.93 (13.45)  min 12  q25 22  median 31  q75 47  max 58Age at end - min 19  q25 26  median 36  q75 50  max 65Sex Female N% 19 (42.22) Male N% 26 (57.78)Prior observation - Mean (SD) 2,794.89 (3,948.48)  min 0  q25 0  median 1,047  q75 4,070  max 15,531Future observation - Mean (SD) 1,680.51 (1,037.81)  min 85  q25 784  median 1,590  q75 2,475  max 3,564>60; overall     Number records - N 1Number subjects - N 1Cohort start date - min 2015-02-28  q25 2015-02-28  median 2015-02-28  q75 2015-02-28  max 2015-02-28Cohort end date - min 2018-05-25  q25 2018-05-25  median 2018-05-25  q75 2018-05-25  max 2018-05-25Age at start - Mean (SD) -  min 64  q25 64  median 64  q75 64  max 64Age at end - min 67  q25 67  median 67  q75 67  max 67Sex Male N% 1 (100.00)Prior observation - Mean (SD) -  min 0  q25 0  median 0  q75 0  max 0Future observation - Mean (SD) -  min 1,182  q25 1,182  median 1,182  q75 1,182  max 1,182overall; Female     Number records - N 19Number subjects - N 19Cohort start date - min 2010-01-01  q25 2010-01-01  median 2010-11-04  q75 2013-12-07  max 2017-10-30Cohort end date - min 2010-04-20  q25 2013-12-12  median 2017-04-14  q75 2018-09-08  max 2019-10-05Age at start - Mean (SD) 34.37 (12.73)  min 18  q25 24  median 32  q75 42  max 58Age at end - min 19  q25 26  median 37  q75 49  max 65Sex Female N% 19 (100.00)Prior observation - Mean (SD) 2,194.68 (3,530.03)  min 0  q25 0  median 0  q75 2,444  max 10,147Future observation - Mean (SD) 1,440.32 (1,093.93)  min 109  q25 600  median 980  q75 2,272  max 3,564overall; Male     Number records - N 27Number subjects - N 27Cohort start date - min 2010-01-01  q25 2010-01-01  median 2010-01-01  q75 2011-08-20  max 2015-06-28Cohort end date - min 2010-03-27  q25 2014-08-26  median 2016-10-11  q75 2018-01-19  max 2019-03-09Age at start - Mean (SD) 34.74 (15.10)  min 12  q25 24  median 31  q75 50  max 64Age at end - min 19  q25 28  median 36  q75 52  max 67Sex Male N% 27 (100.00)Prior observation - Mean (SD) 3,113.74 (4,205.79)  min 0  q25 0  median 1,469  q75 4,148  max 15,531Future observation - Mean (SD) 1,831.07 (968.55)  min 85  q25 1,027  median 2,006  q75 2,518  max 3,354<=60; Female     Number records - N 19Number subjects - N 19Cohort start date - min 2010-01-01  q25 2010-01-01  median 2010-11-04  q75 2013-12-07  max 2017-10-30Cohort end date - min 2010-04-20  q25 2013-12-12  median 2017-04-14  q75 2018-09-08  max 2019-10-05Age at start - Mean (SD) 34.37 (12.73)  min 18  q25 24  median 32  q75 42  max 58Age at end - min 19  q25 26  median 37  q75 49  max 65Sex Female N% 19 (100.00)Prior observation - Mean (SD) 2,194.68 (3,530.03)  min 0  q25 0  median 0  q75 2,444  max 10,147Future observation - Mean (SD) 1,440.32 (1,093.93)  min 109  q25 600  median 980  q75 2,272  max 3,564<=60; Male     Number records - N 26Number subjects - N 26Cohort start date - min 2010-01-01  q25 2010-01-01  median 2010-01-01  q75 2011-04-23  max 2015-06-28Cohort end date - min 2010-03-27  q25 2014-07-03  median 2016-09-25  q75 2017-12-25  max 2019-03-09Age at start - Mean (SD) 33.62 (14.20)  min 12  q25 23  median 30  q75 49  max 58Age at end - min 19  q25 27  median 36  q75 50  max 62Sex Male N% 26 (100.00)Prior observation - Mean (SD) 3,233.50 (4,241.87)  min 0  q25 0  median 1,616  q75 4,188  max 15,531Future observation - Mean (SD) 1,856.04 (978.83)  min 85  q25 980  median 2,068  q75 2,540  max 3,354>60; Male     Number records - N 1Number subjects - N 1Cohort start date - min 2015-02-28  q25 2015-02-28  median 2015-02-28  q75 2015-02-28  max 2015-02-28Cohort end date - min 2018-05-25  q25 2018-05-25  median 2018-05-25  q75 2018-05-25  max 2018-05-25Age at start - Mean (SD) -  min 64  q25 64  median 64  q75 64  max 64Age at end - min 67  q25 67  median 67  q75 67  max 67Sex Male N% 1 (100.00)Prior observation - Mean (SD) -  min 0  q25 0  median 0  q75 0  max 0Future observation - Mean (SD) -  min 1,182  q25 1,182  median 1,182  q75 1,182  max 1,182PatientProfiles::mockDisconnect(cdm = cdm) # }"}]
