[{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://OHDSI.github.io/OmopSketch/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://OHDSI.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Summarise clinical tables records","text":"vignette, explore OmopSketch functions designed provide overview clinical tables within CDM object (observation_period, visit_occurrence, condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, measurement, observation, death). Specifically, four key functions facilitate : summariseClinicalRecords() tableClinicalRecords(): Use create summary statistics key basic information clinical table (e.g., number records, number concepts mapped, etc.) summariseRecordCount() plotRecordCount(): Use summarise number records within specific time interval.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"create-a-mock-cdm","dir":"Articles","previous_headings":"Introduction","what":"Create a mock cdm","title":"Summarise clinical tables records","text":"Let’s see example functionalities. start , load essential packages create mock cdm using mockOmopSketch() database.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(OmopSketch)  # Connect to mock database cdm <- mockOmopSketch() #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid"},{"path":"https://OHDSI.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"summarise-clinical-tables","dir":"Articles","previous_headings":"","what":"Summarise clinical tables","title":"Summarise clinical tables records","text":"Let’s now use summariseClinicalTables()OmopSketch package help us overview one clinical tables cdm (.e., condition_occurrence). Notice output summarised result format. can use arguments specify statistics want perform. example, use argument recordsPerPerson indicate estimates interested regarding number records per person. can specify want include number records observation (inObservation = TRUE), number concepts mapped (standardConcept = TRUE), types source vocabulary table contain (sourceVocabulary = TRUE), types domain vocabulary (domainId = TRUE) concept’s type (typeConcept = TRUE). Additionally, can also stratify previous results sex age groups: Notice , default, “overall” group also included, well crossed strata (means, sex == “Female” ageGroup == “>35”). Also, see analysis can conducted multiple OMOP tables time:","code":"summarisedResult <- summariseClinicalRecords(cdm, \"condition_occurrence\") #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-10-16 11:32:36.376394 #>  #> ✔ Summary finished, at 2024-10-16 11:32:36.405942 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, median, q25, q75, min, max #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-10-16 11:32:36.801136 #>  #> ✔ Summary finished, at 2024-10-16 11:32:36.852716 #> ℹ Summarising in_observation, standard, domain_id, and type information  summarisedResult |> print() #> # A tibble: 18 × 13 #>    result_id cdm_name group_name group_level          strata_name strata_level #>        <int> <chr>    <chr>      <chr>                <chr>       <chr>        #>  1         1 unknown  omop_table condition_occurrence overall     overall      #>  2         1 unknown  omop_table condition_occurrence overall     overall      #>  3         1 unknown  omop_table condition_occurrence overall     overall      #>  4         1 unknown  omop_table condition_occurrence overall     overall      #>  5         1 unknown  omop_table condition_occurrence overall     overall      #>  6         1 unknown  omop_table condition_occurrence overall     overall      #>  7         1 unknown  omop_table condition_occurrence overall     overall      #>  8         1 unknown  omop_table condition_occurrence overall     overall      #>  9         1 unknown  omop_table condition_occurrence overall     overall      #> 10         1 unknown  omop_table condition_occurrence overall     overall      #> 11         1 unknown  omop_table condition_occurrence overall     overall      #> 12         1 unknown  omop_table condition_occurrence overall     overall      #> 13         1 unknown  omop_table condition_occurrence overall     overall      #> 14         1 unknown  omop_table condition_occurrence overall     overall      #> 15         1 unknown  omop_table condition_occurrence overall     overall      #> 16         1 unknown  omop_table condition_occurrence overall     overall      #> 17         1 unknown  omop_table condition_occurrence overall     overall      #> 18         1 unknown  omop_table condition_occurrence overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr> summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\")) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-10-16 11:32:40.358614 #>  #> ✔ Summary finished, at 2024-10-16 11:32:40.390964 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, q05, q95 #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-10-16 11:32:40.76873 #>  #> ✔ Summary finished, at 2024-10-16 11:32:40.817866 #> ℹ Summarising in_observation, standard, domain_id, and type information  summarisedResult |>      filter(variable_name == \"records_per_person\") |>     select(variable_name, estimate_name, estimate_value) #> # A tibble: 4 × 3 #>   variable_name      estimate_name estimate_value   #>   <chr>              <chr>         <chr>            #> 1 records_per_person mean          19               #> 2 records_per_person sd            4.54383809641856 #> 3 records_per_person q05           13               #> 4 records_per_person q95           26 summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\"),                                              inObservation = TRUE,                                              standardConcept = TRUE,                                              sourceVocabulary = TRUE,                                              domainId = TRUE,                                              typeConcept = TRUE) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-10-16 11:32:44.206348 #>  #> ✔ Summary finished, at 2024-10-16 11:32:44.239595 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, q05, q95 #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-10-16 11:32:44.624934 #>  #> ✔ Summary finished, at 2024-10-16 11:32:44.667307 #> ℹ Summarising in_observation, standard, domain_id, source, and type information  summarisedResult |>    select(variable_name, estimate_name, estimate_value) |>    glimpse() #> Rows: 17 #> Columns: 3 #> $ variable_name  <chr> \"number records\", \"number subjects\", \"number subjects\",… #> $ estimate_name  <chr> \"count\", \"count\", \"percentage\", \"mean\", \"sd\", \"q05\", \"q… #> $ estimate_value <chr> \"1900\", \"100\", \"100\", \"19\", \"4.54383809641856\", \"13\", \"… summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\"),                                              inObservation = TRUE,                                              standardConcept = TRUE,                                              sourceVocabulary = TRUE,                                              domainId = TRUE,                                              typeConcept = TRUE,                                              sex = TRUE,                                              ageGroup = list(\"<35\" = c(0, 34), \">=35\" = c(35, Inf))) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-10-16 11:32:50.000169 #>  #> ✔ Summary finished, at 2024-10-16 11:32:50.136214 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, q05, q95 #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-10-16 11:32:50.697938 #>  #> ✔ Summary finished, at 2024-10-16 11:32:50.913727 #> ℹ Summarising in_observation, standard, domain_id, source, and type information  summarisedResult |>    select(variable_name, strata_level, estimate_name, estimate_value) |>    glimpse() #> Rows: 153 #> Columns: 4 #> $ variable_name  <chr> \"number records\", \"number subjects\", \"number records\", … #> $ strata_level   <chr> \"overall\", \"overall\", \"<35\", \">=35\", \"<35\", \">=35\", \"Fe… #> $ estimate_name  <chr> \"count\", \"count\", \"count\", \"count\", \"count\", \"count\", \"… #> $ estimate_value <chr> \"1900\", \"100\", \"1569\", \"331\", \"83\", \"17\", \"1067\", \"833\"… summarisedResult <- summariseClinicalRecords(cdm,                                               c(\"observation_period\",\"drug_exposure\"),                                              recordsPerPerson =  c(\"mean\",\"sd\"),                                              inObservation = FALSE,                                              standardConcept = FALSE,                                              sourceVocabulary = FALSE,                                              domainId = FALSE,                                              typeConcept = FALSE) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-10-16 11:32:56.55567 #>  #> ✔ Summary finished, at 2024-10-16 11:32:56.5844 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd #> → Start summary of data, at 2024-10-16 11:32:56.971881 #>  #> ✔ Summary finished, at 2024-10-16 11:32:57.015319 #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-10-16 11:32:59.681273 #>  #> ✔ Summary finished, at 2024-10-16 11:32:59.710004 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd #> → Start summary of data, at 2024-10-16 11:33:00.102605 #>  #> ✔ Summary finished, at 2024-10-16 11:33:00.144664  summarisedResult |>    select(group_level, variable_name, estimate_name, estimate_value) |>    glimpse() #> Rows: 10 #> Columns: 4 #> $ group_level    <chr> \"observation_period\", \"observation_period\", \"observatio… #> $ variable_name  <chr> \"number records\", \"number subjects\", \"number subjects\",… #> $ estimate_name  <chr> \"count\", \"count\", \"percentage\", \"mean\", \"sd\", \"count\", … #> $ estimate_value <chr> \"100\", \"100\", \"100\", \"1\", \"0\", \"5600\", \"100\", \"100\", \"5…"},{"path":"https://OHDSI.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"tidy-the-summarised-object","dir":"Articles","previous_headings":"Summarise clinical tables","what":"Tidy the summarised object","title":"Summarise clinical tables records","text":"tableClinicalRecords() help tidy previous results create gt table.","code":"summarisedResult <- summariseClinicalRecords(cdm,                                               \"condition_occurrence\",                                              recordsPerPerson =  c(\"mean\", \"sd\", \"q05\", \"q95\"),                                              inObservation = TRUE,                                              standardConcept = TRUE,                                              sourceVocabulary = TRUE,                                              domainId = TRUE,                                              typeConcept = TRUE,                                               sex = TRUE) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-10-16 11:33:03.340252 #>  #> ✔ Summary finished, at 2024-10-16 11:33:03.403882 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, q05, q95 #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-10-16 11:33:03.937035 #>  #> ✔ Summary finished, at 2024-10-16 11:33:04.029714 #> ℹ Summarising in_observation, standard, domain_id, source, and type information  summarisedResult |>    tableClinicalRecords() #> ! Results have not been suppressed."},{"path":"https://OHDSI.github.io/OmopSketch/articles/A-summarise_clinical_tables_records.html","id":"summarise-record-counts","dir":"Articles","previous_headings":"","what":"Summarise record counts","title":"Summarise clinical tables records","text":"OmopSketch can also help summarise trend records OMOP table. See example , use summariseRecordCount() count number records within year, , use plotRecordCount() create ggplot trend.  Note can adjust time interval period using unit argument, can set either “year” “month”, unitInterval argument, must integer specifying number years months count records. See example , shows number records every 18 months:  can stratify counts sex (setting argument sex = TRUE) age (providing age group). Notice cases, function automatically create group called overall sex groups age groups.  default, plotRecordCount() apply faceting colour variables. can result confusing stratifying different variables, seen previous picture. can use VisOmopResults package help us know columns can colour face : , can simply specify using facet colour arguments plotRecordCount()  Finally, disconnect cdm","code":"summarisedResult <- summariseRecordCount(cdm, \"drug_exposure\", unit = \"year\", unitInterval = 1) #> ℹ The following estimates will be computed: #> • interval_group: count #> • sex: count #> • age_group: count #> → Start summary of data, at 2024-10-16 11:33:06.781748 #>  #> ✔ Summary finished, at 2024-10-16 11:33:06.849576  summarisedResult |> print() #> # A tibble: 66 × 13 #>    result_id cdm_name       group_name group_level   strata_name strata_level #>        <int> <chr>          <chr>      <chr>         <chr>       <chr>        #>  1         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  2         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  3         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  4         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  5         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  6         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  7         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  8         1 mockOmopSketch omop_table drug_exposure overall     overall      #>  9         1 mockOmopSketch omop_table drug_exposure overall     overall      #> 10         1 mockOmopSketch omop_table drug_exposure overall     overall      #> # ℹ 56 more rows #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>  summarisedResult |> plotRecordCount() #> ! The following column type were changed: #> • variable_level: from double to character summariseRecordCount(cdm, \"drug_exposure\", unit = \"month\", unitInterval = 18) |>    plotRecordCount() #> ℹ The following estimates will be computed: #> • interval_group: count #> • sex: count #> • age_group: count #> → Start summary of data, at 2024-10-16 11:33:08.501069 #>  #> ✔ Summary finished, at 2024-10-16 11:33:08.575454 #> ! The following column type were changed: #> • variable_level: from double to character summariseRecordCount(cdm, \"drug_exposure\",                       unit = \"month\",                        unitInterval = 18,                        sex = TRUE,                        ageGroup = list(\"<30\" = c(0,29),                                      \">=30\" = c(30,Inf))) |>    plotRecordCount() #> ℹ The following estimates will be computed: #> • interval_group: count #> • age_group: count #> • sex: count #> → Start summary of data, at 2024-10-16 11:33:10.613058 #>  #> ✔ Summary finished, at 2024-10-16 11:33:10.917981 #> ! The following column type were changed: #> • variable_level: from double to character summariseRecordCount(cdm, \"drug_exposure\",                      unit = \"month\",                       unitInterval = 18,                       sex = TRUE,                      ageGroup = list(\"0-29\" = c(0,29),                                      \"30-Inf\" = c(30,Inf)))  |>   visOmopResults::tidyColumns() #> ℹ The following estimates will be computed: #> • interval_group: count #> • age_group: count #> • sex: count #> → Start summary of data, at 2024-10-16 11:33:12.929205 #>  #> ✔ Summary finished, at 2024-10-16 11:33:13.240265 #>  [1] \"cdm_name\"        \"omop_table\"      \"age_group\"       \"sex\"             #>  [5] \"variable_name\"   \"variable_level\"  \"count\"           \"time_interval\"   #>  [9] \"result_type\"     \"package_name\"    \"package_version\" \"unit\"            #> [13] \"unitInterval\" summariseRecordCount(cdm, \"drug_exposure\",                      unit = \"month\",                       unitInterval = 18,                       sex = TRUE,                      ageGroup = list(\"0-29\" = c(0,29),                                      \"30-Inf\" = c(30,Inf))) |>     plotRecordCount(facet = omop_table ~ age_group, colour = \"sex\") #> ℹ The following estimates will be computed: #> • interval_group: count #> • age_group: count #> • sex: count #> → Start summary of data, at 2024-10-16 11:33:14.897832 #>  #> ✔ Summary finished, at 2024-10-16 11:33:15.20497 #> ! The following column type were changed: #> • variable_level: from double to character PatientProfiles::mockDisconnect(cdm = cdm)"},{"path":"https://OHDSI.github.io/OmopSketch/articles/B-summarise_concept_counts.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Summarise concept counts","text":"vignette, explore OmopSketch functions designed provide information number counts specific concepts. Specifically, two key functions facilitate , summariseConceptCounts() plotConceptCounts(). former one creates summary statistics results number counts per concept, latter one creates histogram plot.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/articles/B-summarise_concept_counts.html","id":"create-a-mock-cdm","dir":"Articles","previous_headings":"Introduction","what":"Create a mock cdm","title":"Summarise concept counts","text":"Let’s see example previous functions. start , load essential packages create mock cdm using Eunomia database.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(CDMConnector) library(DBI) library(duckdb) library(OmopSketch) library(CodelistGenerator)  # Connect to Eunomia database con <- DBI::dbConnect(duckdb::duckdb(), CDMConnector::eunomia_dir()) #> Creating CDM database /tmp/Rtmp71XbQP/GiBleed_5.3.zip cdm <- CDMConnector::cdmFromCon(   con = con, cdmSchema = \"main\", writeSchema = \"main\" ) #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid  cdm  #>  #> ── # OMOP CDM reference (duckdb) of Synthea synthetic health database ────────── #> • omop tables: person, observation_period, visit_occurrence, visit_detail, #> condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, #> measurement, observation, death, note, note_nlp, specimen, fact_relationship, #> location, care_site, provider, payer_plan_period, cost, drug_era, dose_era, #> condition_era, metadata, cdm_source, concept, vocabulary, domain, #> concept_class, concept_relationship, relationship, concept_synonym, #> concept_ancestor, source_to_concept_map, drug_strength #> • cohort tables: - #> • achilles tables: - #> • other tables: -"},{"path":"https://OHDSI.github.io/OmopSketch/articles/B-summarise_concept_counts.html","id":"summarise-concept-counts","dir":"Articles","previous_headings":"","what":"Summarise concept counts","title":"Summarise concept counts","text":"First, let’s generate list codes concept dementia using CodelistGenerator package. Now want explore occurrence concepts within database. , can use summariseConceptCounts() OmopSketch: default, function provide information either number records (estimate_name == \"record_count\") concept_id number people (estimate_name == \"person_count\"): However, can specify one interest using countBy argument: One can stratify year, sex age group using year, sex, ageGroup arguments.","code":"acetaminophen <- getCandidateCodes(   cdm = cdm,   keywords = \"acetaminophen\",   domains = \"Drug\",   includeDescendants = TRUE ) |>   dplyr::pull(\"concept_id\") #> Limiting to domains of interest #> Getting concepts to include #> Adding descendants #> Search completed. Finishing up. #> ✔ 7 candidate concepts identified #>  #> Time taken: 0 minutes and 0 seconds  sinusitis <- getCandidateCodes(   cdm = cdm,   keywords = \"sinusitis\",   domains = \"Condition\",   includeDescendants = TRUE ) |>   dplyr::pull(\"concept_id\") #> Limiting to domains of interest #> Getting concepts to include #> Adding descendants #> Search completed. Finishing up. #> ✔ 4 candidate concepts identified #>  #> Time taken: 0 minutes and 0 seconds summariseConceptCounts(cdm,                        conceptId = list(\"acetaminophen\" = acetaminophen,                                                                   \"sinusitis\" = sinusitis)) |>      select(group_level, variable_name, variable_level, estimate_name, estimate_value) |>      glimpse()  #> ℹ Getting concept counts of acetaminophen #> Getting use of codes ■■■■■■■■■■■■■■■■                  50% | ETA:  2s #> ℹ Getting concept counts of sinusitis #> Getting use of codes ■■■■■■■■■■■■■■■■                  50% | ETA:  2sGetting use of codes ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s #> Rows: 24 #> Columns: 5 #> $ group_level    <chr> \"acetaminophen\", \"acetaminophen\", \"acetaminophen\", \"ace… #> $ variable_name  <chr> \"overall\", \"overall\", \"Acetaminophen 160 MG Oral Tablet… #> $ variable_level <chr> NA, NA, \"1127078\", \"1127433\", \"40162522\", \"40231925\", \"… #> $ estimate_name  <chr> \"record_count\", \"person_count\", \"record_count\", \"record… #> $ estimate_value <chr> \"14205\", \"2679\", \"2158\", \"9365\", \"312\", \"306\", \"71\", \"1… summariseConceptCounts(cdm,                         conceptId = list(\"acetaminophen\" = acetaminophen,                                          \"sinusitis\" = sinusitis),                         countBy = c(\"record\",\"person\")) |>   select(group_level, variable_name, estimate_name) |>   distinct() |>   arrange(group_level, variable_name) #> ℹ Getting concept counts of acetaminophen #> ℹ Getting concept counts of sinusitis #> # A tibble: 24 × 3 #>    group_level   variable_name                                     estimate_name #>    <chr>         <chr>                                             <chr>         #>  1 acetaminophen Acetaminophen 160 MG Oral Tablet                  record_count  #>  2 acetaminophen Acetaminophen 160 MG Oral Tablet                  person_count  #>  3 acetaminophen Acetaminophen 21.7 MG/ML / Dextromethorphan Hydr… record_count  #>  4 acetaminophen Acetaminophen 21.7 MG/ML / Dextromethorphan Hydr… person_count  #>  5 acetaminophen Acetaminophen 325 MG / Hydrocodone Bitartrate 7.… record_count  #>  6 acetaminophen Acetaminophen 325 MG / Hydrocodone Bitartrate 7.… person_count  #>  7 acetaminophen Acetaminophen 325 MG / Oxycodone Hydrochloride 5… record_count  #>  8 acetaminophen Acetaminophen 325 MG / Oxycodone Hydrochloride 5… person_count  #>  9 acetaminophen Acetaminophen 325 MG Oral Tablet                  record_count  #> 10 acetaminophen Acetaminophen 325 MG Oral Tablet                  person_count  #> # ℹ 14 more rows summariseConceptCounts(cdm,                         conceptId = list(\"acetaminophen\" = acetaminophen,                                         \"sinusitis\" = sinusitis),                        countBy = \"record\") |>   select(group_level, variable_name, estimate_name) |>   distinct() |>   arrange(group_level, variable_name)  #> ℹ Getting concept counts of acetaminophen #> Getting use of codes ■■■■■■■■■■■■■■■■                  50% | ETA:  2s #> ℹ Getting concept counts of sinusitis #> Getting use of codes ■■■■■■■■■■■■■■■■                  50% | ETA:  2sGetting use of codes ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s #> # A tibble: 12 × 3 #>    group_level   variable_name                                     estimate_name #>    <chr>         <chr>                                             <chr>         #>  1 acetaminophen Acetaminophen 160 MG Oral Tablet                  record_count  #>  2 acetaminophen Acetaminophen 21.7 MG/ML / Dextromethorphan Hydr… record_count  #>  3 acetaminophen Acetaminophen 325 MG / Hydrocodone Bitartrate 7.… record_count  #>  4 acetaminophen Acetaminophen 325 MG / Oxycodone Hydrochloride 5… record_count  #>  5 acetaminophen Acetaminophen 325 MG Oral Tablet                  record_count  #>  6 acetaminophen Acetaminophen 750 MG / Hydrocodone Bitartrate 7.… record_count  #>  7 acetaminophen overall                                           record_count  #>  8 sinusitis     Acute bacterial sinusitis                         record_count  #>  9 sinusitis     Chronic sinusitis                                 record_count  #> 10 sinusitis     Sinusitis                                         record_count  #> 11 sinusitis     Viral sinusitis                                   record_count  #> 12 sinusitis     overall                                           record_count summariseConceptCounts(cdm,                         conceptId = list(\"acetaminophen\" = acetaminophen,                                         \"sinusitis\" = sinusitis),                        countBy = \"person\",                        year = TRUE,                        sex  = TRUE,                        ageGroup = list(\"<=50\" = c(0,50), \">50\" = c(51,Inf))) |>   select(group_level, strata_level, variable_name, estimate_name) |>   glimpse()  #> ℹ Getting concept counts of acetaminophen #> Getting use of codes ■■■■■■■■■■■■■■■■                  50% | ETA:  3s #> ℹ Getting concept counts of sinusitis #> Getting use of codes ■■■■■■■■■■■■■■■■                  50% | ETA:  3sGetting use of codes ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s #> Rows: 7,545 #> Columns: 4 #> $ group_level   <chr> \"acetaminophen\", \"acetaminophen\", \"acetaminophen\", \"acet… #> $ strata_level  <chr> \"overall\", \"1909\", \"1910\", \"1911\", \"1912\", \"1913\", \"1914… #> $ variable_name <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\", \"… #> $ estimate_name <chr> \"person_count\", \"person_count\", \"person_count\", \"person_…"},{"path":"https://OHDSI.github.io/OmopSketch/articles/B-summarise_concept_counts.html","id":"visualise-the-results","dir":"Articles","previous_headings":"Summarise concept counts","what":"Visualise the results","title":"Summarise concept counts","text":"Finally, can visualise concept counts using plotRecordCounts(). Notice either person counts record counts can plotted. included summarised result, filter include one variable time:  Additionally, results stratified year, sex age group, can use facet colour arguments highlight different results plot. help us identify variables can colour facet , can use visOmopResult package.","code":"summariseConceptCounts(cdm,                         conceptId = list(\"sinusitis\" = sinusitis),                         countBy = \"person\") |>    plotConceptCounts() #> ℹ Getting concept counts of sinusitis #> ! The following column type were changed: #> • variable_name: from integer to character summariseConceptCounts(cdm,                         conceptId = list(\"sinusitis\" = sinusitis),                        countBy = c(\"person\",\"record\")) |>   filter(estimate_name == \"person_count\") |>   plotConceptCounts() #> ℹ Getting concept counts of sinusitis #> ! The following column type were changed: #> • variable_name: from integer to character summariseConceptCounts(cdm,                         conceptId = list(\"sinusitis\" = sinusitis),                        countBy = c(\"person\"),                        sex = TRUE,                         ageGroup = list(\"<=50\" = c(0,50), \">50\" = c(51, Inf))) |>   visOmopResults::tidyColumns() #> ℹ Getting concept counts of sinusitis #>  [1] \"cdm_name\"            \"codelist_name\"       \"age_group\"           #>  [4] \"sex\"                 \"variable_name\"       \"variable_level\"      #>  [7] \"person_count\"        \"source_concept_name\" \"source_concept_id\"   #> [10] \"domain_id\"           \"result_type\"         \"package_name\"        #> [13] \"package_version\"  summariseConceptCounts(cdm,                         conceptId = list(\"sinusitis\" = sinusitis),                        countBy = c(\"person\"),                        sex = TRUE,                         ageGroup = list(\"<=50\" = c(0,50), \">50\" = c(51, Inf)))|>   plotConceptCounts(facet = \"sex\", colour = \"age_group\") #> ℹ Getting concept counts of sinusitis #> ! The following column type were changed: #> • variable_name: from integer to character"},{"path":"https://OHDSI.github.io/OmopSketch/articles/C-summarise_pop_characteristics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Summarise population characteristics","text":"vignette, explore OmopSketch functions provide information individuals characteristics specific points time. employ summarisePopulationCharacteristics() generate summary demographic details within database population. Additionally, tidy present results using tablePopulationCharacteristics(), supports either gt flextable formatting output.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/articles/C-summarise_pop_characteristics.html","id":"create-a-mock-cdm","dir":"Articles","previous_headings":"Introduction","what":"Create a mock cdm","title":"Summarise population characteristics","text":"dive OmopSketch functions, need first load essential packages create mock CDM using Eunomia database.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(CDMConnector) library(DBI) library(duckdb) library(OmopSketch)  # Connect to Eunomia database con <- DBI::dbConnect(duckdb::duckdb(), CDMConnector::eunomia_dir()) #> Creating CDM database /tmp/Rtmpr44Nyv/GiBleed_5.3.zip cdm <- CDMConnector::cdmFromCon(   con = con, cdmSchema = \"main\", writeSchema = \"main\" ) #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid  cdm  #>  #> ── # OMOP CDM reference (duckdb) of Synthea synthetic health database ────────── #> • omop tables: person, observation_period, visit_occurrence, visit_detail, #> condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, #> measurement, observation, death, note, note_nlp, specimen, fact_relationship, #> location, care_site, provider, payer_plan_period, cost, drug_era, dose_era, #> condition_era, metadata, cdm_source, concept, vocabulary, domain, #> concept_class, concept_relationship, relationship, concept_synonym, #> concept_ancestor, source_to_concept_map, drug_strength #> • cohort tables: - #> • achilles tables: - #> • other tables: -"},{"path":"https://OHDSI.github.io/OmopSketch/articles/C-summarise_pop_characteristics.html","id":"summarise-population-characteristics","dir":"Articles","previous_headings":"","what":"Summarise population characteristics","title":"Summarise population characteristics","text":"start, use summarisePopulationCharacteristics() function generate summarised result object, capturing demographic characteristics observation_period_start_date observation_period_end_date. tidy display summarised result using gt table, can use tablePopulationCharacteristics() function. obtain flextable instead gt, can simply change type argument \"flextable\". Additionally, important note age start, prior observation, future observation calculated start date defined (case, individuals observation_period_start_date). hand, age end calculated end date defined (.e., individuals observation_period_end_date).","code":"summarisedResult <- summarisePopulationCharacteristics(cdm) #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ℹ Building new trimmed cohort #> Creating initial cohort #> ✔ Cohort trimmed #> ℹ adding demographics columns #>  #> ℹ summarising data #>  #> ✔ summariseCharacteristics finished! #>  #> ! The following column type were changed: #> • variable_name: from integer to character  summarisedResult |> glimpse() #> Rows: 49 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"Synthea synthetic health database\", \"Synthea synthet… #> $ group_name       <chr> \"cohort_name\", \"cohort_name\", \"cohort_name\", \"cohort_… #> $ group_level      <chr> \"demographics\", \"demographics\", \"demographics\", \"demo… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"Number records\", \"Number subjects\", \"Cohort start da… #> $ variable_level   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ estimate_name    <chr> \"count\", \"count\", \"min\", \"q25\", \"median\", \"q75\", \"max… #> $ estimate_type    <chr> \"integer\", \"integer\", \"date\", \"date\", \"date\", \"date\",… #> $ estimate_value   <chr> \"2694\", \"2694\", \"1908-09-22\", \"1950-07-13\", \"1961-03-… #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… summarisedResult |>   tablePopulationCharacteristics(type = \"flextable\") #> ! Results have not been suppressed."},{"path":"https://OHDSI.github.io/OmopSketch/articles/C-summarise_pop_characteristics.html","id":"trim-study-period","dir":"Articles","previous_headings":"Summarise population characteristics","what":"Trim study period","title":"Summarise population characteristics","text":"focus specific period within observation data, rather analysing entire individuals’ observation period, can trim study period using studyPeriod argument. allows analyse demographic metrics within defined time range rather default observation start end dates. However, interested analysing demographic characteristics starting specific date without restricting study end, can define just start study period. default, summarisePopulationCharacteristics() function use observation_period_end_date calculate end-point statistics end date defined. Similarly, interested analysing population characteristics specific end date, can define end date set startDate = NA. default observation_period_start_date used.","code":"summarisePopulationCharacteristics(cdm,                                    studyPeriod = c(\"1950-01-01\", \"1999-12-31\")) |>   tablePopulationCharacteristics() #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ℹ Building new trimmed cohort #> Creating initial cohort #> ✔ Cohort trimmed #> ℹ adding demographics columns #>  #> ℹ summarising data #>  #> ✔ summariseCharacteristics finished! #>  #> ! The following column type were changed: #> • variable_name: from integer to character #> ! Results have not been suppressed. summarisePopulationCharacteristics(cdm,                                    studyPeriod = c(\"1950-01-01\", NA)) |>   tablePopulationCharacteristics() #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ℹ Building new trimmed cohort #> Creating initial cohort #> ✔ Cohort trimmed #> ℹ adding demographics columns #>  #> ℹ summarising data #>  #> ✔ summariseCharacteristics finished! #>  #> ! The following column type were changed: #> • variable_name: from integer to character #> ! Results have not been suppressed."},{"path":"https://OHDSI.github.io/OmopSketch/articles/C-summarise_pop_characteristics.html","id":"stratify-by-age-groups-and-sex","dir":"Articles","previous_headings":"Summarise population characteristics","what":"Stratify by age groups and sex","title":"Summarise population characteristics","text":"Population characteristics can also estimated stratifying data based age sex using ageGroups sex arguments.","code":"summarisePopulationCharacteristics(cdm,                                    sex = TRUE,                                    ageGroup = list(\"<60\" = c(0,59), \">=60\" = c(60, Inf))) |>   tablePopulationCharacteristics() #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ℹ Building new trimmed cohort #> Creating initial cohort #> ✔ Cohort trimmed #> ℹ adding demographics columns #>  #> ℹ summarising data #>  #> ✔ summariseCharacteristics finished! #>  #> ! The following column type were changed: #> • variable_name: from integer to character #> ! Results have not been suppressed."},{"path":"https://OHDSI.github.io/OmopSketch/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marta Alcalde-Herraiz. Author, maintainer. Kim Lopez-Guell. Author. Elin Rowlands. Author. Edward Burn. Author. Martí Català. Author.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alcalde-Herraiz M, Lopez-Guell K, Rowlands E, Burn E, Català M (2024). OmopSketch: Characterise Tables OMOP Common Data Model Instance. R package version 0.1.1, https://OHDSI.github.io/OmopSketch/.","code":"@Manual{,   title = {OmopSketch: Characterise Tables of an OMOP Common Data Model Instance},   author = {Marta Alcalde-Herraiz and Kim Lopez-Guell and Elin Rowlands and Edward Burn and Martí Català},   year = {2024},   note = {R package version 0.1.1},   url = {https://OHDSI.github.io/OmopSketch/}, }"},{"path":[]},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"warning-this-package-is-under-development-and-has-only-been-tested-using-mock-data","dir":"","previous_headings":"","what":"WARNING: this package is under-development and has only been tested using mock data","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"goal OmopSketch characterise visualise OMOP CDM instance asses meets necessary criteria answer specific clinical question conduct certain study.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"can install development version OmopSketch GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"OHDSI/OmopSketch\")"},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"Let’s start creating cdm object using Eunomia mock dataset:","code":"library(duckdb) #> Loading required package: DBI library(CDMConnector) library(dplyr, warn.conflicts = FALSE) library(OmopSketch) con <- dbConnect(duckdb(), eunomia_dir()) cdm <- cdmFromCon(con = con, cdmSchema = \"main\", writeSchema = \"main\") #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid cdm #>  #> ── # OMOP CDM reference (duckdb) of Synthea synthetic health database ────────── #> • omop tables: person, observation_period, visit_occurrence, visit_detail, #> condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, #> measurement, observation, death, note, note_nlp, specimen, fact_relationship, #> location, care_site, provider, payer_plan_period, cost, drug_era, dose_era, #> condition_era, metadata, cdm_source, concept, vocabulary, domain, #> concept_class, concept_relationship, relationship, concept_synonym, #> concept_ancestor, source_to_concept_map, drug_strength #> • cohort tables: - #> • achilles tables: - #> • other tables: -"},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"snapshot","dir":"","previous_headings":"Example","what":"Snapshot","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"first create snapshot database. allow us track analysis conducted capture details CDM version data release.","code":"summariseOmopSnapshot(cdm) |>   tableOmopSnapshot(type = \"flextable\") #> ! Results have not been suppressed."},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"characterise-the-clinical-tables","dir":"","previous_headings":"Example","what":"Characterise the clinical tables","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"collected snapshot information, can start characteristing clinical tables CDM. using summariseClinicalRecords() tableClinicalRecords(), can easily visualise main characteristics specific clinical tables.  can also explore trends clinical table records time. ### Characterise observation period visualising main characteristics clinical tables, can explore observation period details. OmopSketch provides several functions overwied dataset study period. Using summariseInObservation() plotInObservation(), can gather information number records per year. can also visualise explore characteristics observation period per individual database using summariseObservationPeriod().  visualisation prefered, can easily build histogram explore many participants one observation period.","code":"summariseClinicalRecords(cdm, c(\"condition_occurrence\", \"drug_exposure\")) |>   tableClinicalRecords(type = \"flextable\") #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-09-25 12:14:06.676817 #>  #> ✔ Summary finished, at 2024-09-25 12:14:06.815944 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, median, q25, q75, min, max #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-09-25 12:14:07.908258 #>  #> ✔ Summary finished, at 2024-09-25 12:14:07.955041 #> ℹ Summarising in_observation, standard, domain_id, and type information #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-09-25 12:14:11.725276 #>  #> ✔ Summary finished, at 2024-09-25 12:14:11.877293 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd, median, q25, q75, min, max #> ! Table is collected to memory as not all requested estimates are supported on #>   the database side #> → Start summary of data, at 2024-09-25 12:14:12.808874 #>  #> ✔ Summary finished, at 2024-09-25 12:14:12.850686 #> ℹ Summarising in_observation, standard, domain_id, and type information #> ! Results have not been suppressed. summariseRecordCount(cdm, c(\"condition_occurrence\", \"drug_exposure\")) |>   plotRecordCount(facet = \"omop_table\") #> ! The following column type were changed: #> • variable_level: from double to character summariseInObservation(cdm$observation_period, output = \"records\") |>   plotInObservation() #> ! The following column type were changed: #> • variable_level: from double to character summariseObservationPeriod(cdm$observation_period) |>   tableObservationPeriod(type = \"flextable\") #> ! Results have not been suppressed. summariseObservationPeriod(cdm$observation_period) |>   plotObservationPeriod()"},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"characterise-the-concepts","dir":"","previous_headings":"Example","what":"Characterise the concepts","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"OmopSketch also provides functions explore () concepts dataset.","code":"acetaminophen <- c(1125315,  1127433, 1127078)  summariseConceptCounts(cdm, conceptId = list(\"acetaminophen\" = acetaminophen)) |>   filter(estimate_name == \"record_count\") |>    plotConceptCounts() #> ℹ Getting use of codes from acetaminophen #> ! The following column type were changed: #> • variable_name: from integer to character"},{"path":"https://OHDSI.github.io/OmopSketch/index.html","id":"characterise-the-population","dir":"","previous_headings":"Example","what":"Characterise the population","title":"Characterise Tables of an OMOP Common Data Model Instance","text":"Finally, OmopSketch can also help us characterise population start end observation period. seen, OmopSketch offers multiple functionalities provide general overview database. Additionally, includes tools arguments allow deeper exploration, helping assess database’s suitability specific research studies. information, please refer vignettes.","code":"summarisePopulationCharacteristics(cdm) |>   tablePopulationCharacteristics(type = \"flextable\") #> Warning: ! 1 casted column in og_015_1727262876 (cohort_set) as do not match expected #>   column type: #> • `cohort_definition_id` from numeric to integer #> Warning: ! 1 column in og_015_1727262876 do not match expected column type: #> • `cohort_definition_id` is numeric but expected integer #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ℹ Building new trimmed cohort #> Warning: ! 1 column in tmp_011_og_017_1727262877 do not match expected column type: #> • `cohort_definition_id` is numeric but expected integer #> Creating initial cohort #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ✔ Cohort trimmed #> ℹ adding demographics columns #>  #> ℹ summarising data #>  #> ✔ summariseCharacteristics finished! #>  #> ! The following column type were changed: #> • variable_name: from integer to character #> ! Results have not been suppressed."},{"path":"https://OHDSI.github.io/OmopSketch/reference/OmopSketch-package.html","id":null,"dir":"Reference","previous_headings":"","what":"OmopSketch: Characterise Tables of an OMOP Common Data Model Instance — OmopSketch-package","title":"OmopSketch: Characterise Tables of an OMOP Common Data Model Instance — OmopSketch-package","text":"Summarises key information data mapped Observational Medical Outcomes Partnership (OMOP) common data model. Assess suitability perform specific epidemiological studies explore different domains obtain feasibility counts trends.","code":""},{"path":[]},{"path":"https://OHDSI.github.io/OmopSketch/reference/OmopSketch-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OmopSketch: Characterise Tables of an OMOP Common Data Model Instance — OmopSketch-package","text":"Maintainer: Marta Alcalde-Herraiz marta.alcaldeherraiz@ndorms.ox.ac.uk (ORCID) Authors: Kim Lopez-Guell kim.lopez@spc.ox.ac.uk (ORCID) Elin Rowlands elin.rowlands@ndorms.ox.ac.uk (ORCID) Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) Martí Català marti.catalasabate@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/mockOmopSketch.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a mock database to test OmopSketch package. — mockOmopSketch","title":"Creates a mock database to test OmopSketch package. — mockOmopSketch","text":"Creates mock database test OmopSketch package.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/mockOmopSketch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a mock database to test OmopSketch package. — mockOmopSketch","text":"","code":"mockOmopSketch(   con = NULL,   writeSchema = NULL,   numberIndividuals = 100,   seed = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/mockOmopSketch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a mock database to test OmopSketch package. — mockOmopSketch","text":"con DBI connection create cdm mock object. default, connection 'duckdb' one. writeSchema Name schema DBI connection writing permissions. numberIndividuals Number individuals create cdm reference object. seed optional integer used set seed random number generation, ensuring reproducibility generated data. provided, seed allows function produce consistent results time run inputs. 'NULL', seed set, can lead different outputs run.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/mockOmopSketch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a mock database to test OmopSketch package. — mockOmopSketch","text":"mock cdm_reference object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/mockOmopSketch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a mock database to test OmopSketch package. — mockOmopSketch","text":"","code":"mockOmopSketch(numberIndividuals = 100) #> Note: method with signature ‘DBIConnection#Id’ chosen for function ‘dbExistsTable’, #>  target signature ‘duckdb_connection#Id’. #>  \"duckdb_connection#ANY\" would also be valid #>  #> ── # OMOP CDM reference (duckdb) of mockOmopSketch ───────────────────────────── #> • omop tables: person, observation_period, cdm_source, concept, vocabulary, #> concept_relationship, concept_synonym, concept_ancestor, drug_strength, #> condition_occurrence, death, drug_exposure, measurement, observation, #> procedure_occurrence, visit_occurrence, device_exposure #> • cohort tables: - #> • achilles tables: - #> • other tables: -"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotConceptCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the concept counts of a summariseConceptCounts output. — plotConceptCounts","title":"Plot the concept counts of a summariseConceptCounts output. — plotConceptCounts","text":"Plot concept counts summariseConceptCounts output.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotConceptCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the concept counts of a summariseConceptCounts output. — plotConceptCounts","text":"","code":"plotConceptCounts(result, facet = NULL, colour = NULL)"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotConceptCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the concept counts of a summariseConceptCounts output. — plotConceptCounts","text":"result summarised_result object (output summariseConceptCounts). facet Columns face . Formula format can provided. See possible columns face : visOmopResults::tidyColumns(). colour Columns colour . See possible columns colour : visOmopResults::tidyColumns().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotConceptCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the concept counts of a summariseConceptCounts output. — plotConceptCounts","text":"ggplot2 object showing concept counts.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotConceptCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the concept counts of a summariseConceptCounts output. — plotConceptCounts","text":"","code":"# \\donttest{ library(dplyr, warn.conflicts = FALSE)  cdm <- mockOmopSketch()  result <- cdm |>   summariseConceptCounts(     conceptId = list(       \"Renal agenesis\" = 194152,       \"Manic mood\" = c(4226696, 4304866, 37110496, 40371897)     )   ) #> ℹ Getting concept counts of Renal agenesis #> Getting use of codes ■■■■■■■■■■■■■■■■                  50% | ETA:  2s #> ℹ Getting concept counts of Manic mood #> Getting use of codes ■■■■■■■■■■■■■■■■                  50% | ETA:  2s #> Getting use of codes ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s  result |>   filter(estimate_name == \"person_count\", variable_name == \"overall\") |>   plotConceptCounts(facet = \"codelist_name\", colour = \"codelist_name\") #> ! The following column type were changed: #> • variable_name: from integer to character   PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotInObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","title":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","text":"Create ggplot2 plot output summariseInObservation().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotInObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","text":"","code":"plotInObservation(result, facet = NULL, colour = NULL)"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotInObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","text":"result summarised_result object (output summariseInObservation). facet Columns face . Formula format can provided. See possible columns face : visOmopResults::tidyColumns(). colour Columns colour . See possible columns colour : visOmopResults::tidyColumns().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotInObservation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","text":"ggplot showing table counts","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotInObservation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot2 plot from the output of summariseInObservation(). — plotInObservation","text":"","code":"# \\donttest{ library(dplyr, warn.conflicts = FALSE)  cdm <- mockOmopSketch()  result <- summariseInObservation(   cdm$observation_period,   output = c(\"person-days\",\"records\"),   ageGroup = list(\"<=40\" = c(0, 40), \">40\" = c(41, Inf)),   sex = TRUE )  result |>   filter(variable_name == \"Number person-days\") |>   plotInObservation(facet = \"sex\", colour = \"age_group\") #> ! The following column type were changed: #> • variable_level: from double to character   PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotObservationPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"Create plot output summariseObservationPeriod().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"","code":"plotObservationPeriod(   result,   variableName = \"number subjects\",   plotType = \"barplot\",   facet = NULL,   colour = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"result summarised_result object. variableName variable plot can : \"number subjects\", \"records per person\", \"duration\" \"days next observation period\". plotType plot type, can : \"barplot\", \"boxplot\" \"densityplot\". facet Columns colour . See possible columns colour : visOmopResults::tidyColumns(). colour Columns colour . See possible columns colour : visOmopResults::tidyColumns().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"ggplot2 object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotObservationPeriod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a plot from the output of summariseObservationPeriod(). — plotObservationPeriod","text":"","code":"# \\donttest{ cdm <- mockOmopSketch(numberIndividuals = 100)  result <- summariseObservationPeriod(cdm$observation_period)  result |>   plotObservationPeriod(     variableName = \"duration in days\",     plotType = \"boxplot\"   )   PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotRecordCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot of the records' count trend. — plotRecordCount","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"Create ggplot records' count trend.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotRecordCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"","code":"plotRecordCount(result, facet = NULL, colour = NULL)"},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotRecordCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"result Output summariseRecordCount(). facet Columns face . Formula format can provided. See possible columns face : visOmopResults::tidyColumns(). colour Columns colour . See possible columns colour : visOmopResults::tidyColumns().","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotRecordCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"ggplot showing table counts","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/plotRecordCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot of the records' count trend. — plotRecordCount","text":"","code":"# \\donttest{ cdm <- mockOmopSketch()  summarisedResult <- summariseRecordCount(   cdm = cdm,   omopTableName = \"condition_occurrence\",   ageGroup = list(\"<=20\" = c(0,20), \">20\" = c(21, Inf)),   sex = TRUE ) #> ℹ The following estimates will be computed: #> • interval_group: count #> • age_group: count #> • sex: count #> → Start summary of data, at 2024-10-16 11:30:55.892154 #> ✔ Summary finished, at 2024-10-16 11:30:56.177619  plotRecordCount(summarisedResult, colour = \"age_group\", facet = sex ~ .) #> ! The following column type were changed: #> • variable_level: from double to character   PatientProfiles::mockDisconnect(cdm = cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. omopgenerics bind, exportSummarisedResult, importSummarisedResult, settings, suppress","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"Summarise omop table cdm object. obtain information related number records, number subjects, whether records observation, number present domains number present concepts.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"","code":"summariseClinicalRecords(   cdm,   omopTableName,   recordsPerPerson = c(\"mean\", \"sd\", \"median\", \"q25\", \"q75\", \"min\", \"max\"),   inObservation = TRUE,   standardConcept = TRUE,   sourceVocabulary = FALSE,   domainId = TRUE,   typeConcept = TRUE,   sex = FALSE,   ageGroup = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"cdm cdm_reference object. omopTableName character vector names tables summarise cdm object. recordsPerPerson Generates summary statistics number records per person. Set NULL summary statistics required. inObservation Boolean variable. Whether include percentage records observation. standardConcept Boolean variable. Whether summarise standard concept information. sourceVocabulary Boolean variable.  Whether summarise source vocabulary information. domainId Boolean variable. Whether summarise domain id standard concept id information. typeConcept Boolean variable. Whether summarise type concept id field information. sex Boolean variable. Whether stratify sex (TRUE) (FALSE). ageGroup list age groups stratify results .","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseClinicalRecords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise an omop table from a cdm object. You will obtain information related to the number of records, number of subjects, whether the records are in observation, number of present domains and number of present concepts. — summariseClinicalRecords","text":"","code":"# \\donttest{ cdm <- mockOmopSketch()  summarisedResult <- summariseClinicalRecords(   cdm = cdm,   omopTableName = \"condition_occurrence\",   recordsPerPerson = c(\"mean\", \"sd\"),   inObservation = TRUE,   standardConcept = TRUE,   sourceVocabulary = TRUE,   domainId = TRUE,   typeConcept = TRUE ) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-10-16 11:31:03.624541 #> ✔ Summary finished, at 2024-10-16 11:31:03.663948 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd #> → Start summary of data, at 2024-10-16 11:31:04.048901 #> ✔ Summary finished, at 2024-10-16 11:31:04.103843 #> ℹ Summarising in_observation, standard, domain_id, source, and type information  summarisedResult #> # A tibble: 15 × 13 #>    result_id cdm_name group_name group_level          strata_name strata_level #>        <int> <chr>    <chr>      <chr>                <chr>       <chr>        #>  1         1 unknown  omop_table condition_occurrence overall     overall      #>  2         1 unknown  omop_table condition_occurrence overall     overall      #>  3         1 unknown  omop_table condition_occurrence overall     overall      #>  4         1 unknown  omop_table condition_occurrence overall     overall      #>  5         1 unknown  omop_table condition_occurrence overall     overall      #>  6         1 unknown  omop_table condition_occurrence overall     overall      #>  7         1 unknown  omop_table condition_occurrence overall     overall      #>  8         1 unknown  omop_table condition_occurrence overall     overall      #>  9         1 unknown  omop_table condition_occurrence overall     overall      #> 10         1 unknown  omop_table condition_occurrence overall     overall      #> 11         1 unknown  omop_table condition_occurrence overall     overall      #> 12         1 unknown  omop_table condition_occurrence overall     overall      #> 13         1 unknown  omop_table condition_occurrence overall     overall      #> 14         1 unknown  omop_table condition_occurrence overall     overall      #> 15         1 unknown  omop_table condition_occurrence overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>  PatientProfiles::mockDisconnect(cdm = cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise code use in patient-level data — summariseConceptCounts","title":"Summarise code use in patient-level data — summariseConceptCounts","text":"Summarise code use patient-level data","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise code use in patient-level data — summariseConceptCounts","text":"","code":"summariseConceptCounts(   cdm,   conceptId,   countBy = c(\"record\", \"person\"),   concept = TRUE,   year = FALSE,   sex = FALSE,   ageGroup = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise code use in patient-level data — summariseConceptCounts","text":"cdm cdm object conceptId List concept IDs summarise. countBy Either \"record\" record-level counts \"person\" person-level counts concept TRUE FALSE. TRUE code use summarised concept. year TRUE FALSE. TRUE code use summarised year. sex TRUE FALSE. TRUE code use summarised sex. ageGroup list ageGroup vectors length two. Code use thus summarised age groups.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise code use in patient-level data — summariseConceptCounts","text":"summarised_result object results overall , specified, strata.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseConceptCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise code use in patient-level data — summariseConceptCounts","text":"","code":"# \\donttest{  cdm <- mockOmopSketch()  cs <- list(sumatriptan = c(35604883, 35604879, 35604880, 35604884))  results <- summariseConceptCounts(cdm, conceptId = cs) #> ℹ Getting concept counts of sumatriptan  results #> # A tibble: 10 × 13 #>    result_id cdm_name       group_name    group_level strata_name strata_level #>        <int> <chr>          <chr>         <chr>       <chr>       <chr>        #>  1         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  2         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  3         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  4         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  5         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  6         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  7         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  8         1 mockOmopSketch codelist_name sumatriptan overall     overall      #>  9         1 mockOmopSketch codelist_name sumatriptan overall     overall      #> 10         1 mockOmopSketch codelist_name sumatriptan overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>  PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseInObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","title":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","text":"Summarise number people observation specific interval time.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseInObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","text":"","code":"summariseInObservation(   observationPeriod,   unit = \"year\",   unitInterval = 1,   output = \"records\",   ageGroup = NULL,   sex = FALSE )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseInObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","text":"observationPeriod observation_period omop table. must part cdm_reference object. unit Whether stratify \"year\" \"month\". unitInterval Number years months include within time interval. output Output format. can either number records (\"records\") observation specific interval time, number person-days (\"person-days\"), c(\"records\",\"person-days\"). ageGroup list age groups stratify results . sex Boolean variable. Whether stratify sex (TRUE) (FALSE).","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseInObservation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","text":"summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseInObservation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise the number of people in observation during a specific interval of time. — summariseInObservation","text":"","code":"# \\donttest{ library(dplyr, warn.conflicts = FALSE)  cdm <- mockOmopSketch()  result <- summariseInObservation(   cdm$observation_period,   unit = \"month\",   unitInterval = 6,   output = c(\"person-days\",\"records\"),   ageGroup = list(\"<=60\" = c(0,60), \">60\" = c(61, Inf)),   sex = TRUE )  result |>   glimpse() #> Rows: 2,904 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"mockOmopSketch\", \"mockOmopSketch\", \"mockOmopSketch\",… #> $ group_name       <chr> \"omop_table\", \"omop_table\", \"omop_table\", \"omop_table… #> $ group_level      <chr> \"observation_period\", \"observation_period\", \"observat… #> $ strata_name      <chr> \"sex &&& age_group\", \"sex\", \"sex\", \"sex &&& age_group… #> $ strata_level     <chr> \"Female &&& <=60\", \"Female\", \"Female\", \"Female &&& <=… #> $ variable_name    <chr> \"Number person-days\", \"Number person-days\", \"Number r… #> $ variable_level   <chr> \"1960-07-01 to 1960-12-31\", \"1960-07-01 to 1960-12-31… #> $ estimate_name    <chr> \"count\", \"count\", \"count\", \"count\", \"count\", \"count\",… #> $ estimate_type    <chr> \"integer\", \"integer\", \"integer\", \"integer\", \"integer\"… #> $ estimate_value   <chr> \"89\", \"89\", \"1\", \"1\", \"181\", \"181\", \"1\", \"1\", \"184\", … #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"…  PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"Summarise observation period table getting overall statistics summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"","code":"summariseObservationPeriod(   observationPeriod,   estimates = c(\"mean\", \"sd\", \"min\", \"q05\", \"q25\", \"median\", \"q75\", \"q95\", \"max\",     \"density\"),   ageGroup = NULL,   sex = FALSE )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"observationPeriod observation_period omop table. estimates Estimates summarise variables interest ( records per person, duration days days next observation period). ageGroup list age groups stratify results . sex Boolean variable. Whether stratify sex (TRUE) (FALSE).","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"summarised_result object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseObservationPeriod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise the observation period table getting some overall statistics in a summarised_result object. — summariseObservationPeriod","text":"","code":"# \\donttest{ library(dplyr, warn.conflicts = FALSE)  cdm <- mockOmopSketch(numberIndividuals = 100)  result <- summariseObservationPeriod(cdm$observation_period)  result |>   glimpse() #> Rows: 3,120 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"mockOmopSketch\", \"mockOmopSketch\", \"mockOmopSketch\",… #> $ group_name       <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ group_level      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"number records\", \"number subjects\", \"records per per… #> $ variable_level   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ estimate_name    <chr> \"count\", \"count\", \"mean\", \"sd\", \"min\", \"q05\", \"q25\", … #> $ estimate_type    <chr> \"integer\", \"integer\", \"numeric\", \"numeric\", \"integer\"… #> $ estimate_value   <chr> \"100\", \"100\", \"1\", \"0\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",… #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"…  PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","title":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","text":"Summarise cdm_reference object creating snapshot metadata cdm_reference object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","text":"","code":"summariseOmopSnapshot(cdm)"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","text":"cdm cdm_reference object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","text":"summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseOmopSnapshot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise a cdm_reference object creating a snapshot with the metadata of the cdm_reference object. — summariseOmopSnapshot","text":"","code":"cdm <- mockOmopSketch(numberIndividuals = 10)  summariseOmopSnapshot(cdm) #> # A tibble: 13 × 13 #>    result_id cdm_name       group_name group_level strata_name strata_level #>        <int> <chr>          <chr>      <chr>       <chr>       <chr>        #>  1         1 mockOmopSketch overall    overall     overall     overall      #>  2         1 mockOmopSketch overall    overall     overall     overall      #>  3         1 mockOmopSketch overall    overall     overall     overall      #>  4         1 mockOmopSketch overall    overall     overall     overall      #>  5         1 mockOmopSketch overall    overall     overall     overall      #>  6         1 mockOmopSketch overall    overall     overall     overall      #>  7         1 mockOmopSketch overall    overall     overall     overall      #>  8         1 mockOmopSketch overall    overall     overall     overall      #>  9         1 mockOmopSketch overall    overall     overall     overall      #> 10         1 mockOmopSketch overall    overall     overall     overall      #> 11         1 mockOmopSketch overall    overall     overall     overall      #> 12         1 mockOmopSketch overall    overall     overall     overall      #> 13         1 mockOmopSketch overall    overall     overall     overall      #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summarisePopulationCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the characteristics of the base population of a cdm_reference object. — summarisePopulationCharacteristics","title":"Summarise the characteristics of the base population of a cdm_reference object. — summarisePopulationCharacteristics","text":"Summarise characteristics base population cdm_reference object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summarisePopulationCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the characteristics of the base population of a cdm_reference object. — summarisePopulationCharacteristics","text":"","code":"summarisePopulationCharacteristics(   cdm,   studyPeriod = c(NA, NA),   sex = FALSE,   ageGroup = NULL )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summarisePopulationCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the characteristics of the base population of a cdm_reference object. — summarisePopulationCharacteristics","text":"cdm cdm_reference object. studyPeriod Dates trim observation period. NA, min(observation_period_start_date) /max(observation_period_end_date) used. sex Whether stratify results sex. ageGroup List age groups stratify index date.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summarisePopulationCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the characteristics of the base population of a cdm_reference object. — summarisePopulationCharacteristics","text":"summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summarisePopulationCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise the characteristics of the base population of a cdm_reference object. — summarisePopulationCharacteristics","text":"","code":"# \\donttest{ cdm <- mockOmopSketch()  summarisedPopulation <- summarisePopulationCharacteristics(   cdm = cdm,   studyPeriod = c(\"2010-01-01\", NA),   sex = TRUE,   ageGroup = NULL ) #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ℹ Building new trimmed cohort #> Creating initial cohort #> ✔ Cohort trimmed #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished! #> ! The following column type were changed: #> • variable_name: from integer to character  summarisedPopulation |> print() #> # A tibble: 143 × 13 #>    result_id cdm_name       group_name  group_level  strata_name strata_level #>        <int> <chr>          <chr>       <chr>        <chr>       <chr>        #>  1         1 mockOmopSketch cohort_name demographics overall     overall      #>  2         1 mockOmopSketch cohort_name demographics sex         Female       #>  3         1 mockOmopSketch cohort_name demographics sex         Male         #>  4         1 mockOmopSketch cohort_name demographics overall     overall      #>  5         1 mockOmopSketch cohort_name demographics sex         Female       #>  6         1 mockOmopSketch cohort_name demographics sex         Male         #>  7         1 mockOmopSketch cohort_name demographics overall     overall      #>  8         1 mockOmopSketch cohort_name demographics overall     overall      #>  9         1 mockOmopSketch cohort_name demographics overall     overall      #> 10         1 mockOmopSketch cohort_name demographics overall     overall      #> # ℹ 133 more rows #> # ℹ 7 more variables: variable_name <chr>, variable_level <chr>, #> #   estimate_name <chr>, estimate_type <chr>, estimate_value <chr>, #> #   additional_name <chr>, additional_level <chr>  PatientProfiles::mockDisconnect(cdm = cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseRecordCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","title":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","text":"Summarise record counts omop_table using specific time interval. records fall within observation period considered.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseRecordCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","text":"","code":"summariseRecordCount(   cdm,   omopTableName,   unit = \"year\",   unitInterval = 1,   ageGroup = NULL,   sex = FALSE )"},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseRecordCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","text":"cdm cdm_reference object. omopTableName character vector omop tables cdm. unit Time unit can either \"year\" \"month\". unitInterval Number years months include within interval. ageGroup list age groups stratify results . sex Whether stratify sex (TRUE) (FALSE).","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseRecordCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","text":"summarised_result object.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/summariseRecordCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise record counts of an omop_table using a specific time interval. Only records that fall within the observation period are considered. — summariseRecordCount","text":"","code":"# \\donttest{ library(dplyr, warn.conflicts = FALSE)  cdm <- mockOmopSketch()  summarisedResult <- summariseRecordCount(   cdm = cdm,   omopTableName = c(\"condition_occurrence\", \"drug_exposure\"),   unit = \"year\",   unitInterval = 10,   ageGroup = list(\"<=20\" = c(0,20), \">20\" = c(21, Inf)),   sex = TRUE ) #> ℹ The following estimates will be computed: #> • interval_group: count #> • age_group: count #> • sex: count #> → Start summary of data, at 2024-10-16 11:31:48.478342 #> ✔ Summary finished, at 2024-10-16 11:31:48.75828 #> ℹ The following estimates will be computed: #> • interval_group: count #> • age_group: count #> • sex: count #> → Start summary of data, at 2024-10-16 11:31:50.120575 #> ✔ Summary finished, at 2024-10-16 11:31:50.399151  summarisedResult |>   glimpse() #> Rows: 102 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"mockOmopSketch\", \"mockOmopSketch\", \"mockOmopSketch\",… #> $ group_name       <chr> \"omop_table\", \"omop_table\", \"omop_table\", \"omop_table… #> $ group_level      <chr> \"condition_occurrence\", \"condition_occurrence\", \"cond… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"incidence_records\", \"incidence_records\", \"incidence_… #> $ variable_level   <chr> \"1961-01-01 to 1970-12-31\", \"1971-01-01 to 1980-12-31… #> $ estimate_name    <chr> \"count\", \"count\", \"count\", \"count\", \"count\", \"count\",… #> $ estimate_type    <chr> \"integer\", \"integer\", \"integer\", \"integer\", \"integer\"… #> $ estimate_value   <chr> \"61\", \"192\", \"346\", \"400\", \"522\", \"379\", \"61\", \"157\",… #> $ additional_name  <chr> \"time_interval\", \"time_interval\", \"time_interval\", \"t… #> $ additional_level <chr> \"1961-01-01\", \"1971-01-01\", \"1981-01-01\", \"1991-01-01…  PatientProfiles::mockDisconnect(cdm = cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableClinicalRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","title":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","text":"Create visual table summariseClinicalRecord() output.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","text":"","code":"tableClinicalRecords(result, type = \"gt\")"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","text":"result Output summariseClinicalRecords(). type Type formatting output table, either \"gt\" \"flextable\".","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","text":"gt flextable object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableClinicalRecords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a visual table from a summariseClinicalRecord() output. — tableClinicalRecords","text":"","code":"# \\donttest{ cdm <- mockOmopSketch()  summarisedResult <- summariseClinicalRecords(   cdm = cdm,   omopTableName = c(\"condition_occurrence\", \"drug_exposure\"),   recordsPerPerson = c(\"mean\", \"sd\"),   inObservation = TRUE,   standardConcept = TRUE,   sourceVocabulary = TRUE,   domainId = TRUE,   typeConcept = TRUE ) #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-10-16 11:31:57.18578 #> ✔ Summary finished, at 2024-10-16 11:31:57.214925 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd #> → Start summary of data, at 2024-10-16 11:31:57.607748 #> ✔ Summary finished, at 2024-10-16 11:31:57.650298 #> ℹ Summarising in_observation, standard, domain_id, source, and type information #> ℹ Summarising table counts #> ℹ The following estimates will be computed: #> → Start summary of data, at 2024-10-16 11:32:01.023911 #> ✔ Summary finished, at 2024-10-16 11:32:01.05362 #> ℹ Summarising records per person #> ℹ The following estimates will be computed: #> • records_per_person: mean, sd #> → Start summary of data, at 2024-10-16 11:32:01.426973 #> ✔ Summary finished, at 2024-10-16 11:32:01.468117 #> ℹ Summarising in_observation, standard, domain_id, source, and type information  summarisedResult |>   suppress(minCellCount = 5) |>   tableClinicalRecords()     Variable name       Variable level       Estimate name                Database name            unknown     condition_occurrence     Number records - N 1,900Number subjects - N (%) 100 (100.00%)Records per person - Mean (SD) 19.00 (3.81)In observation Yes N (%) 1,900 (100.00%)Standard concept Source N (%) 1,900 (100.00%)Source vocabulary No matching concept N (%) 1,900 (100.00%)Domain Condition N (%) 1,900 (100.00%)Type concept id 1 N (%) 1,900 (100.00%)drug_exposure     Number records - N 5,600Number subjects - N (%) 100 (100.00%)Records per person - Mean (SD) 56.00 (7.71)In observation Yes N (%) 5,600 (100.00%)Standard concept Source N (%) 5,600 (100.00%)Source vocabulary No matching concept N (%) 5,600 (100.00%)Domain Drug N (%) 5,600 (100.00%)Type concept id 1 N (%) 5,600 (100.00%) PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableObservationPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","title":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","text":"Create visual table summariseObservationPeriod() result.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","text":"","code":"tableObservationPeriod(result, type = \"gt\")"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","text":"result summarised_result object. type Type formatting output table, either \"gt\" \"flextable\".","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","text":"gt flextable object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableObservationPeriod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a visual table from a summariseObservationPeriod() result. — tableObservationPeriod","text":"","code":"# \\donttest{ cdm <- mockOmopSketch(numberIndividuals = 100)  result <- summariseObservationPeriod(cdm$observation_period)  tableObservationPeriod(result) #> ! Results have not been suppressed.     Observation period ordinal       Variable name       Estimate name                CDM name            mockOmopSketch     overall Number records N 100 Number subjects N 100 Records per person mean (sd) 1.00 (0.00)  median [Q25 - Q75] 1 [1 - 1] Duration in days mean (sd) 3,619.04 (3,887.15)  median [Q25 - Q75] 2,268 [720 - 5,498] Days to next observation period mean (sd) -  median [Q25 - Q75] -1st Number subjects N 100 Duration in days mean (sd) 3,619.04 (3,887.15)  median [Q25 - Q75] 2,268 [720 - 5,498] Days to next observation period mean (sd) -  median [Q25 - Q75] - PatientProfiles::mockDisconnect(cdm) # }"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","title":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","text":"Create visual table summarise_omop_snapshot result.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","text":"","code":"tableOmopSnapshot(result, type = \"gt\")"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","text":"result Output summariseOmopSnapshot(). type Type formatting output table, either \"gt\" \"flextable\".","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","text":"gt flextable object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tableOmopSnapshot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a visual table from a summarise_omop_snapshot result. — tableOmopSnapshot","text":"","code":"cdm <- mockOmopSketch(numberIndividuals = 10)  result <- summariseOmopSnapshot(cdm)  result |>   tableOmopSnapshot() #> ! Results have not been suppressed.     Estimate                Database name            mockOmopSketch     General     Snapshot date 2024-10-16Person count 10Vocabulary version -Observation period     N 10Start date 1954-07-29End date 2019-08-23Cdm     Source name mockVersion 5.3Holder name -Release date -Description -Documentation reference -Source type duckdb PatientProfiles::mockDisconnect(cdm)"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tablePopulationCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a visual table from a summarise_population_characteristics result. — tablePopulationCharacteristics","title":"Create a visual table from a summarise_population_characteristics result. — tablePopulationCharacteristics","text":"Create visual table summarise_population_characteristics result.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tablePopulationCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a visual table from a summarise_population_characteristics result. — tablePopulationCharacteristics","text":"","code":"tablePopulationCharacteristics(result, type = \"gt\")"},{"path":"https://OHDSI.github.io/OmopSketch/reference/tablePopulationCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a visual table from a summarise_population_characteristics result. — tablePopulationCharacteristics","text":"result Output summarisePopulationCharacteristics(). type Type formatting output table, either \"gt\" \"flextable\".","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tablePopulationCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a visual table from a summarise_population_characteristics result. — tablePopulationCharacteristics","text":"gt flextable object summarised data.","code":""},{"path":"https://OHDSI.github.io/OmopSketch/reference/tablePopulationCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a visual table from a summarise_population_characteristics result. — tablePopulationCharacteristics","text":"","code":"# \\donttest{ cdm <- mockOmopSketch()  summarisedPopulation <- summarisePopulationCharacteristics(   cdm = cdm,   studyPeriod = c(\"2010-01-01\", NA),   sex = TRUE,   ageGroup = list(\"<=60\" = c(0, 60), \">60\" = c(61, Inf)) ) #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ℹ Building new trimmed cohort #> Creating initial cohort #> ✔ Cohort trimmed #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished! #> ! The following column type were changed: #> • variable_name: from integer to character  summarisedPopulation |>   suppress(minCellCount = 5) |>   tablePopulationCharacteristics()     Variable name       Variable level       Estimate name                Database name            mockOmopSketch     overall; overall     Number records - N 58Number subjects - N 58Cohort start date - Median [Q25 - Q75] 2010-01-01 [2010-01-01 - 2014-10-28]  Range 2010-01-01 to 2019-11-25Cohort end date - Median [Q25 - Q75] 2015-01-23 [2013-01-31 - 2018-04-09]  Range 2010-04-14 to 2019-12-19Age at start - Median [Q25 - Q75] 31 [23 - 46]  Mean (SD) 34.14 (14.95)  Range 11 to 65Age at end - Median [Q25 - Q75] 36 [27 - 49]  Range 12 to 66Sex Female N% 31 (53.45) Male N% 27 (46.55)Prior observation - Median [Q25 - Q75] 261 [0 - 2,740]  Mean (SD) 1,987.72 (3,039.53)  Range 0 to 12,363Future observation - Median [Q25 - Q75] 862 [368 - 1,542]  Mean (SD) 1,144.55 (1,004.22)  Range 4 to 3,631Days in cohort - Median [Q25 - Q75] 863 [370 - 1,543]  Mean (SD) 1,145.55 (1,004.22)  Range 5 to 3,632<=60; overall     Number records - N 56Number subjects - N 56Cohort start date - Median [Q25 - Q75] 2010-01-01 [2010-01-01 - 2014-09-27]  Range 2010-01-01 to 2019-11-25Cohort end date - Median [Q25 - Q75] 2014-12-24 [2013-01-11 - 2018-03-08]  Range 2010-04-14 to 2019-12-19Age at start - Median [Q25 - Q75] 30 [23 - 45]  Mean (SD) 33.07 (14.07)  Range 11 to 58Age at end - Median [Q25 - Q75] 36 [26 - 48]  Range 12 to 62Sex Female N% 30 (53.57) Male N% 26 (46.43)Prior observation - Median [Q25 - Q75] 368 [0 - 2,780]  Mean (SD) 2,058.71 (3,070.16)  Range 0 to 12,363Future observation - Median [Q25 - Q75] 888 [458 - 1,553]  Mean (SD) 1,173.70 (1,009.71)  Range 4 to 3,631Days in cohort - Median [Q25 - Q75] 890 [458 - 1,554]  Mean (SD) 1,174.70 (1,009.71)  Range 5 to 3,632>60; overall     Number records - N <5Number subjects - N <5Cohort start date - Median [Q25 - Q75] <5 [<5 - <5]  Range <5 to <5Cohort end date - Median [Q25 - Q75] <5 [<5 - <5]  Range <5 to <5Age at start - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5Age at end - Median [Q25 - Q75] <5 [<5 - <5]  Range <5 to <5Sex Female N% <5 (<5) Male N% <5 (<5)Prior observation - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5Future observation - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5Days in cohort - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5overall; Female     Number records - N 31Number subjects - N 31Cohort start date - Median [Q25 - Q75] 2010-01-01 [2010-01-01 - 2013-06-12]  Range 2010-01-01 to 2019-05-28Cohort end date - Median [Q25 - Q75] 2014-05-12 [2012-04-08 - 2018-05-11]  Range 2010-04-14 to 2019-12-19Age at start - Median [Q25 - Q75] 34 [24 - 46]  Mean (SD) 35.55 (13.76)  Range 13 to 63Age at end - Median [Q25 - Q75] 37 [28 - 50]  Range 15 to 64Sex Female N% 31 (100.00)Prior observation - Median [Q25 - Q75] 792 [0 - 3,968]  Mean (SD) 2,442.65 (3,180.65)  Range 0 to 9,470Future observation - Median [Q25 - Q75] 812 [497 - 1,559]  Mean (SD) 1,156.10 (970.74)  Range 71 to 3,595Days in cohort - Median [Q25 - Q75] 813 [498 - 1,560]  Mean (SD) 1,157.10 (970.74)  Range 72 to 3,596overall; Male     Number records - N 27Number subjects - N 27Cohort start date - Median [Q25 - Q75] 2011-12-16 [2010-01-01 - 2014-12-10]  Range 2010-01-01 to 2019-11-25Cohort end date - Median [Q25 - Q75] 2016-04-03 [2013-08-29 - 2018-01-31]  Range 2010-05-01 to 2019-12-17Age at start - Median [Q25 - Q75] 29 [18 - 46]  Mean (SD) 32.52 (16.33)  Range 11 to 65Age at end - Median [Q25 - Q75] 34 [21 - 48]  Range 12 to 66Sex Male N% 27 (100.00)Prior observation - Median [Q25 - Q75] 0 [0 - 2,322]  Mean (SD) 1,465.41 (2,837.47)  Range 0 to 12,363Future observation - Median [Q25 - Q75] 892 [285 - 1,456]  Mean (SD) 1,131.30 (1,059.80)  Range 4 to 3,631Days in cohort - Median [Q25 - Q75] 893 [286 - 1,457]  Mean (SD) 1,132.30 (1,059.80)  Range 5 to 3,632<=60; Female     Number records - N 30Number subjects - N 30Cohort start date - Median [Q25 - Q75] 2010-01-01 [2010-01-01 - 2011-11-06]  Range 2010-01-01 to 2019-05-28Cohort end date - Median [Q25 - Q75] 2014-05-02 [2012-04-02 - 2018-04-09]  Range 2010-04-14 to 2019-12-19Age at start - Median [Q25 - Q75] 33 [24 - 44]  Mean (SD) 34.63 (13.00)  Range 13 to 58Age at end - Median [Q25 - Q75] 36 [28 - 48]  Range 15 to 62Sex Female N% 30 (100.00)Prior observation - Median [Q25 - Q75] 826 [0 - 4,431]  Mean (SD) 2,524.07 (3,202.00)  Range 0 to 9,470Future observation - Median [Q25 - Q75] 826 [512 - 1,565]  Mean (SD) 1,187.67 (971.02)  Range 71 to 3,595Days in cohort - Median [Q25 - Q75] 826 [513 - 1,566]  Mean (SD) 1,188.67 (971.02)  Range 72 to 3,596<=60; Male     Number records - N 26Number subjects - N 26Cohort start date - Median [Q25 - Q75] 2011-12-01 [2010-01-01 - 2014-10-27]  Range 2010-01-01 to 2019-11-25Cohort end date - Median [Q25 - Q75] 2015-10-29 [2013-08-05 - 2017-12-06]  Range 2010-05-01 to 2019-12-17Age at start - Median [Q25 - Q75] 29 [18 - 46]  Mean (SD) 31.27 (15.28)  Range 11 to 58Age at end - Median [Q25 - Q75] 33 [20 - 47]  Range 12 to 60Sex Male N% 26 (100.00)Prior observation - Median [Q25 - Q75] 0 [0 - 2,422]  Mean (SD) 1,521.77 (2,878.20)  Range 0 to 12,363Future observation - Median [Q25 - Q75] 910 [280 - 1,491]  Mean (SD) 1,157.58 (1,071.78)  Range 4 to 3,631Days in cohort - Median [Q25 - Q75] 912 [281 - 1,492]  Mean (SD) 1,158.58 (1,071.78)  Range 5 to 3,632>60; Female     Number records - N <5Number subjects - N <5Cohort start date - Median [Q25 - Q75] <5 [<5 - <5]  Range <5 to <5Cohort end date - Median [Q25 - Q75] <5 [<5 - <5]  Range <5 to <5Age at start - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5Age at end - Median [Q25 - Q75] <5 [<5 - <5]  Range <5 to <5Sex Female N% <5 (<5)Prior observation - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5Future observation - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5Days in cohort - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5>60; Male     Number records - N <5Number subjects - N <5Cohort start date - Median [Q25 - Q75] <5 [<5 - <5]  Range <5 to <5Cohort end date - Median [Q25 - Q75] <5 [<5 - <5]  Range <5 to <5Age at start - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5Age at end - Median [Q25 - Q75] <5 [<5 - <5]  Range <5 to <5Sex Male N% <5 (<5)Prior observation - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5Future observation - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5Days in cohort - Median [Q25 - Q75] <5 [<5 - <5]  Mean (SD) <5 (<5)  Range <5 to <5 PatientProfiles::mockDisconnect(cdm = cdm) # }"}]
